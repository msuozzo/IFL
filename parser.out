Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    INDENT

Grammar

Rule 0     S' -> program
Rule 1     empty -> <empty>
Rule 2     program -> program definition
Rule 3     program -> empty
Rule 4     definition -> trait_definition
Rule 5     definition -> character_definition
Rule 6     definition -> setting_definition
Rule 7     definition -> item_definition
Rule 8     trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK
Rule 9     character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK
Rule 10    setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK
Rule 11    item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK
Rule 12    desc_or_nothing -> description_string
Rule 13    desc_or_nothing -> empty
Rule 14    description_string -> string_value
Rule 15    s_directive -> START COLON start_list END_BLOCK
Rule 16    start_list -> statement_list
Rule 17    d_or_nothing -> d_directive
Rule 18    d_or_nothing -> empty
Rule 19    d_directive -> DIALOGUE COLON dialogue_list END_BLOCK
Rule 20    dialogue_list -> LABEL COLON statement_list END_BLOCK dialogue_list
Rule 21    dialogue_list -> empty
Rule 22    a_or_nothing -> a_directive
Rule 23    a_or_nothing -> empty
Rule 24    a_directive -> ACTIONS COLON action_list END_BLOCK
Rule 25    action_list -> string_value COLON statement_list END_BLOCK action_list
Rule 26    action_list -> empty
Rule 27    f_or_nothing -> f_directive
Rule 28    f_or_nothing -> empty
Rule 29    f_directive -> FUNCTIONS COLON function_list END_BLOCK
Rule 30    function_list -> function_list ID args_or_nothing COLON statement_list END_BLOCK
Rule 31    function_list -> empty
Rule 32    args_or_nothing -> WITH ID optional_args
Rule 33    args_or_nothing -> empty
Rule 34    optional_args -> optional_args COMMA ID
Rule 35    optional_args -> empty
Rule 36    statement_list -> statement_list statement
Rule 37    statement_list -> empty
Rule 38    statement -> print
Rule 39    statement -> add
Rule 40    statement -> remove
Rule 41    statement -> set
Rule 42    statement -> move
Rule 43    statement -> increase
Rule 44    statement -> decrease
Rule 45    statement -> initiate
Rule 46    statement -> conditional
Rule 47    statement -> execute
Rule 48    statement -> goto
Rule 49    statement -> using
Rule 50    statement -> EXIT
Rule 51    conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
Rule 52    else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK
Rule 53    else_if_conditional -> empty
Rule 54    else_conditional -> ELSE COLON statement_list END_BLOCK
Rule 55    else_conditional -> empty
Rule 56    goto -> GOTO LABEL
Rule 57    execute -> EXECUTE object_chain passed_args
Rule 58    passed_args -> WITH arg optional_passed_args
Rule 59    passed_args -> empty
Rule 60    optional_passed_args -> optional_passed_args COMMA arg
Rule 61    optional_passed_args -> empty
Rule 62    arg -> arithmetic_expression
Rule 63    arg -> string_expression
Rule 64    arg -> tf_expression
Rule 65    print -> PRINT string_expression
Rule 66    add -> ADD quantity ID to_or_nothing
Rule 67    add -> ADD primitive
Rule 68    quantity -> LBRACK arithmetic_expression RBRACK
Rule 69    quantity -> empty
Rule 70    arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object
Rule 71    arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object
Rule 72    arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object
Rule 73    arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object
Rule 74    arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object
Rule 75    arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object
Rule 76    arithmetic_expression -> MINUS arithmetic_or_object
Rule 77    arithmetic_expression -> LPAREN arithmetic_or_object RPAREN
Rule 78    arithmetic_expression -> INTEGER_VAL
Rule 79    arithmetic_expression -> DECIMAL_VAL
Rule 80    to_or_nothing -> TO object_chain
Rule 81    to_or_nothing -> empty
Rule 82    object_chain -> object_chain ON ID
Rule 83    object_chain -> ID
Rule 84    primitive -> integer_primitive
Rule 85    primitive -> decimal_primitive
Rule 86    primitive -> string_primitive
Rule 87    primitive -> tf_primitive
Rule 88    integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE
Rule 89    decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE
Rule 90    string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE
Rule 91    tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE
Rule 92    numeric_literal -> arithmetic_expression
Rule 93    numeric_literal -> object_chain
Rule 94    string_value -> STRING_VAL
Rule 95    string_expression -> string_expression CONCAT string_literal
Rule 96    string_expression -> string_literal
Rule 97    string_literal -> string_value
Rule 98    string_literal -> object_chain
Rule 99    tf_expression -> tf_expression OR tf_expression
Rule 100   tf_expression -> tf_expression AND tf_expression
Rule 101   tf_expression -> NOT tf_expression
Rule 102   tf_expression -> LPAREN tf_expression RPAREN
Rule 103   tf_expression -> tf_literal
Rule 104   tf_literal -> has_expression
Rule 105   tf_literal -> relational_expression
Rule 106   tf_literal -> TRUE
Rule 107   tf_literal -> FALSE
Rule 108   relational_operand -> tf_literal
Rule 109   relational_operand -> object_chain
Rule 110   relational_operand -> arithmetic_expression
Rule 111   relational_operand -> string_value
Rule 112   has_expression -> object_chain HAS ID
Rule 113   has_expression -> HAS ID
Rule 114   relational_expression -> relational_operand relational_operator relational_operand
Rule 115   relational_operator -> LTHAN
Rule 116   relational_operator -> GTHAN
Rule 117   relational_operator -> LTHANEQ
Rule 118   relational_operator -> GTHANEQ
Rule 119   relational_operator -> ISEQUAL
Rule 120   relational_operator -> NOTEQUAL
Rule 121   relational_operator -> EQUALS
Rule 122   relational_operator -> NOT EQUALS
Rule 123   remove -> REMOVE quantity ID from_or_nothing
Rule 124   from_or_nothing -> FROM object_chain
Rule 125   from_or_nothing -> empty
Rule 126   set -> SET object_chain TO arg
Rule 127   move -> MOVE character_or_nothing TO object_chain
Rule 128   character_or_nothing -> object_chain
Rule 129   character_or_nothing -> empty
Rule 130   arithmetic_or_object -> arithmetic_expression
Rule 131   arithmetic_or_object -> object_chain
Rule 132   increase -> INCREASE object_chain BY arithmetic_or_object
Rule 133   decrease -> DECREASE object_chain BY arithmetic_or_object
Rule 134   initiate -> INITIATE DIALOGUE AT LABEL
Rule 135   using -> USING string_value

Terminals, with rules where they appear

ACTIONS              : 24
ADD                  : 66 67
AND                  : 100
ASSIGN               : 88 89 90 91
AT                   : 134
BY                   : 132 133
CHARACTER            : 9
COLON                : 8 9 10 11 15 19 20 24 25 29 30 51 52 54
COMMA                : 34 60
COMMENT              : 
CONCAT               : 95
DECIMAL              : 89
DECIMAL_VAL          : 79
DECREASE             : 133
DIALOGUE             : 19 134
DIVIDE               : 73
ELSE                 : 52 54
END_BLOCK            : 8 9 10 11 15 19 20 24 25 29 30 51 52 54
EQUALS               : 121 122
EXECUTE              : 57
EXIT                 : 50
FALSE                : 107
FROM                 : 124
FUNCTIONS            : 29
GOTO                 : 56
GTHAN                : 116
GTHANEQ              : 118
HAS                  : 112 113
ID                   : 8 9 10 11 30 32 34 66 82 83 88 89 90 91 112 113 123
IF                   : 51 52
INCREASE             : 132
INDENT               : 
INITIATE             : 134
INTEGER              : 88
INTEGER_VAL          : 78
ISEQUAL              : 119
ITEM                 : 11
LABEL                : 20 56 134
LBRACE               : 88 89 90 91
LBRACK               : 68
LPAREN               : 77 102
LTHAN                : 115
LTHANEQ              : 117
MINUS                : 71 76
MODULUS              : 72
MOVE                 : 127
MULTIPLY             : 74
NOT                  : 101 122
NOTEQUAL             : 120
ON                   : 82
OR                   : 99
PLUS                 : 70
POWER                : 75
PRINT                : 65
RBRACE               : 88 89 90 91
RBRACK               : 68
REMOVE               : 123
RPAREN               : 77 102
SET                  : 126
SETTING              : 10
START                : 15
STRING               : 90
STRING_VAL           : 94
TF                   : 91
TO                   : 80 126 127
TRAIT                : 8
TRUE                 : 106
USING                : 135
WITH                 : 32 58
error                : 

Nonterminals, with rules where they appear

a_directive          : 22
a_or_nothing         : 9 11
action_list          : 24 25
add                  : 39
arg                  : 58 60 126
args_or_nothing      : 30
arithmetic_expression : 62 68 92 110 130
arithmetic_or_object : 70 70 71 71 72 72 73 73 74 74 75 75 76 77 132 133
character_definition : 5
character_or_nothing : 127
conditional          : 46
d_directive          : 17
d_or_nothing         : 9
decimal_primitive    : 85
decrease             : 44
definition           : 2
desc_or_nothing      : 8 9 10 11
description_string   : 12
dialogue_list        : 19 20
else_conditional     : 51
else_if_conditional  : 51 52
empty                : 3 13 18 21 23 26 28 31 33 35 37 53 55 59 61 69 81 125 129
execute              : 47
f_directive          : 27
f_or_nothing         : 8 9 11
from_or_nothing      : 123
function_list        : 29 30
goto                 : 48
has_expression       : 104
increase             : 43
initiate             : 45
integer_primitive    : 84
item_definition      : 7
move                 : 42
numeric_literal      : 88 89
object_chain         : 57 80 82 93 98 109 112 124 126 127 128 131 132 133
optional_args        : 32 34
optional_passed_args : 58 60
passed_args          : 57
primitive            : 67
print                : 38
program              : 2 0
quantity             : 66 123
relational_expression : 105
relational_operand   : 114 114
relational_operator  : 114
remove               : 40
s_directive          : 8 9 10 11
set                  : 41
setting_definition   : 6
start_list           : 15
statement            : 36
statement_list       : 16 20 25 30 36 51 52 54
string_expression    : 63 65 90 95
string_literal       : 95 96
string_primitive     : 86
string_value         : 14 25 97 111 135
tf_expression        : 51 52 64 91 99 99 100 100 101 102
tf_literal           : 103 108
tf_primitive         : 87
to_or_nothing        : 66
trait_definition     : 4
using                : 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . program definition
    (3) program -> . empty
    (1) empty -> .

    TRAIT           reduce using rule 1 (empty -> .)
    CHARACTER       reduce using rule 1 (empty -> .)
    SETTING         reduce using rule 1 (empty -> .)
    ITEM            reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)

    program                        shift and go to state 1
    empty                          shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . definition
    (4) definition -> . trait_definition
    (5) definition -> . character_definition
    (6) definition -> . setting_definition
    (7) definition -> . item_definition
    (8) trait_definition -> . TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK
    (9) character_definition -> . CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK
    (10) setting_definition -> . SETTING ID COLON desc_or_nothing s_directive END_BLOCK
    (11) item_definition -> . ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK

    TRAIT           shift and go to state 6
    CHARACTER       shift and go to state 7
    SETTING         shift and go to state 4
    ITEM            shift and go to state 10

    definition                     shift and go to state 3
    item_definition                shift and go to state 5
    trait_definition               shift and go to state 8
    character_definition           shift and go to state 9
    setting_definition             shift and go to state 11

state 2

    (3) program -> empty .

    TRAIT           reduce using rule 3 (program -> empty .)
    CHARACTER       reduce using rule 3 (program -> empty .)
    SETTING         reduce using rule 3 (program -> empty .)
    ITEM            reduce using rule 3 (program -> empty .)
    $end            reduce using rule 3 (program -> empty .)


state 3

    (2) program -> program definition .

    TRAIT           reduce using rule 2 (program -> program definition .)
    CHARACTER       reduce using rule 2 (program -> program definition .)
    SETTING         reduce using rule 2 (program -> program definition .)
    ITEM            reduce using rule 2 (program -> program definition .)
    $end            reduce using rule 2 (program -> program definition .)


state 4

    (10) setting_definition -> SETTING . ID COLON desc_or_nothing s_directive END_BLOCK

    ID              shift and go to state 12


state 5

    (7) definition -> item_definition .

    TRAIT           reduce using rule 7 (definition -> item_definition .)
    CHARACTER       reduce using rule 7 (definition -> item_definition .)
    SETTING         reduce using rule 7 (definition -> item_definition .)
    ITEM            reduce using rule 7 (definition -> item_definition .)
    $end            reduce using rule 7 (definition -> item_definition .)


state 6

    (8) trait_definition -> TRAIT . ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK

    ID              shift and go to state 13


state 7

    (9) character_definition -> CHARACTER . ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK

    ID              shift and go to state 14


state 8

    (4) definition -> trait_definition .

    TRAIT           reduce using rule 4 (definition -> trait_definition .)
    CHARACTER       reduce using rule 4 (definition -> trait_definition .)
    SETTING         reduce using rule 4 (definition -> trait_definition .)
    ITEM            reduce using rule 4 (definition -> trait_definition .)
    $end            reduce using rule 4 (definition -> trait_definition .)


state 9

    (5) definition -> character_definition .

    TRAIT           reduce using rule 5 (definition -> character_definition .)
    CHARACTER       reduce using rule 5 (definition -> character_definition .)
    SETTING         reduce using rule 5 (definition -> character_definition .)
    ITEM            reduce using rule 5 (definition -> character_definition .)
    $end            reduce using rule 5 (definition -> character_definition .)


state 10

    (11) item_definition -> ITEM . ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK

    ID              shift and go to state 15


state 11

    (6) definition -> setting_definition .

    TRAIT           reduce using rule 6 (definition -> setting_definition .)
    CHARACTER       reduce using rule 6 (definition -> setting_definition .)
    SETTING         reduce using rule 6 (definition -> setting_definition .)
    ITEM            reduce using rule 6 (definition -> setting_definition .)
    $end            reduce using rule 6 (definition -> setting_definition .)


state 12

    (10) setting_definition -> SETTING ID . COLON desc_or_nothing s_directive END_BLOCK

    COLON           shift and go to state 16


state 13

    (8) trait_definition -> TRAIT ID . COLON desc_or_nothing s_directive f_or_nothing END_BLOCK

    COLON           shift and go to state 17


state 14

    (9) character_definition -> CHARACTER ID . COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK

    COLON           shift and go to state 18


state 15

    (11) item_definition -> ITEM ID . COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK

    COLON           shift and go to state 19


state 16

    (10) setting_definition -> SETTING ID COLON . desc_or_nothing s_directive END_BLOCK
    (12) desc_or_nothing -> . description_string
    (13) desc_or_nothing -> . empty
    (14) description_string -> . string_value
    (1) empty -> .
    (94) string_value -> . STRING_VAL

    START           reduce using rule 1 (empty -> .)
    STRING_VAL      shift and go to state 22

    desc_or_nothing                shift and go to state 21
    description_string             shift and go to state 23
    empty                          shift and go to state 24
    string_value                   shift and go to state 20

state 17

    (8) trait_definition -> TRAIT ID COLON . desc_or_nothing s_directive f_or_nothing END_BLOCK
    (12) desc_or_nothing -> . description_string
    (13) desc_or_nothing -> . empty
    (14) description_string -> . string_value
    (1) empty -> .
    (94) string_value -> . STRING_VAL

    START           reduce using rule 1 (empty -> .)
    STRING_VAL      shift and go to state 22

    string_value                   shift and go to state 20
    desc_or_nothing                shift and go to state 25
    description_string             shift and go to state 23
    empty                          shift and go to state 24

state 18

    (9) character_definition -> CHARACTER ID COLON . desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK
    (12) desc_or_nothing -> . description_string
    (13) desc_or_nothing -> . empty
    (14) description_string -> . string_value
    (1) empty -> .
    (94) string_value -> . STRING_VAL

    START           reduce using rule 1 (empty -> .)
    STRING_VAL      shift and go to state 22

    string_value                   shift and go to state 20
    desc_or_nothing                shift and go to state 26
    description_string             shift and go to state 23
    empty                          shift and go to state 24

state 19

    (11) item_definition -> ITEM ID COLON . desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK
    (12) desc_or_nothing -> . description_string
    (13) desc_or_nothing -> . empty
    (14) description_string -> . string_value
    (1) empty -> .
    (94) string_value -> . STRING_VAL

    START           reduce using rule 1 (empty -> .)
    STRING_VAL      shift and go to state 22

    string_value                   shift and go to state 20
    desc_or_nothing                shift and go to state 27
    description_string             shift and go to state 23
    empty                          shift and go to state 24

state 20

    (14) description_string -> string_value .

    START           reduce using rule 14 (description_string -> string_value .)


state 21

    (10) setting_definition -> SETTING ID COLON desc_or_nothing . s_directive END_BLOCK
    (15) s_directive -> . START COLON start_list END_BLOCK

    START           shift and go to state 29

    s_directive                    shift and go to state 28

state 22

    (94) string_value -> STRING_VAL .

    CONCAT          reduce using rule 94 (string_value -> STRING_VAL .)
    EXIT            reduce using rule 94 (string_value -> STRING_VAL .)
    PRINT           reduce using rule 94 (string_value -> STRING_VAL .)
    ADD             reduce using rule 94 (string_value -> STRING_VAL .)
    REMOVE          reduce using rule 94 (string_value -> STRING_VAL .)
    SET             reduce using rule 94 (string_value -> STRING_VAL .)
    MOVE            reduce using rule 94 (string_value -> STRING_VAL .)
    INCREASE        reduce using rule 94 (string_value -> STRING_VAL .)
    DECREASE        reduce using rule 94 (string_value -> STRING_VAL .)
    INITIATE        reduce using rule 94 (string_value -> STRING_VAL .)
    IF              reduce using rule 94 (string_value -> STRING_VAL .)
    EXECUTE         reduce using rule 94 (string_value -> STRING_VAL .)
    GOTO            reduce using rule 94 (string_value -> STRING_VAL .)
    USING           reduce using rule 94 (string_value -> STRING_VAL .)
    END_BLOCK       reduce using rule 94 (string_value -> STRING_VAL .)
    LTHAN           reduce using rule 94 (string_value -> STRING_VAL .)
    GTHAN           reduce using rule 94 (string_value -> STRING_VAL .)
    LTHANEQ         reduce using rule 94 (string_value -> STRING_VAL .)
    GTHANEQ         reduce using rule 94 (string_value -> STRING_VAL .)
    ISEQUAL         reduce using rule 94 (string_value -> STRING_VAL .)
    NOTEQUAL        reduce using rule 94 (string_value -> STRING_VAL .)
    EQUALS          reduce using rule 94 (string_value -> STRING_VAL .)
    NOT             reduce using rule 94 (string_value -> STRING_VAL .)
    START           reduce using rule 94 (string_value -> STRING_VAL .)
    COMMA           reduce using rule 94 (string_value -> STRING_VAL .)
    COLON           reduce using rule 94 (string_value -> STRING_VAL .)
    RBRACE          reduce using rule 94 (string_value -> STRING_VAL .)
    OR              reduce using rule 94 (string_value -> STRING_VAL .)
    AND             reduce using rule 94 (string_value -> STRING_VAL .)
    RPAREN          reduce using rule 94 (string_value -> STRING_VAL .)


state 23

    (12) desc_or_nothing -> description_string .

    START           reduce using rule 12 (desc_or_nothing -> description_string .)


state 24

    (13) desc_or_nothing -> empty .

    START           reduce using rule 13 (desc_or_nothing -> empty .)


state 25

    (8) trait_definition -> TRAIT ID COLON desc_or_nothing . s_directive f_or_nothing END_BLOCK
    (15) s_directive -> . START COLON start_list END_BLOCK

    START           shift and go to state 29

    s_directive                    shift and go to state 30

state 26

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing . s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK
    (15) s_directive -> . START COLON start_list END_BLOCK

    START           shift and go to state 29

    s_directive                    shift and go to state 31

state 27

    (11) item_definition -> ITEM ID COLON desc_or_nothing . s_directive a_or_nothing f_or_nothing END_BLOCK
    (15) s_directive -> . START COLON start_list END_BLOCK

    START           shift and go to state 29

    s_directive                    shift and go to state 32

state 28

    (10) setting_definition -> SETTING ID COLON desc_or_nothing s_directive . END_BLOCK

    END_BLOCK       shift and go to state 33


state 29

    (15) s_directive -> START . COLON start_list END_BLOCK

    COLON           shift and go to state 34


state 30

    (8) trait_definition -> TRAIT ID COLON desc_or_nothing s_directive . f_or_nothing END_BLOCK
    (27) f_or_nothing -> . f_directive
    (28) f_or_nothing -> . empty
    (29) f_directive -> . FUNCTIONS COLON function_list END_BLOCK
    (1) empty -> .

    FUNCTIONS       shift and go to state 35
    END_BLOCK       reduce using rule 1 (empty -> .)

    f_directive                    shift and go to state 36
    f_or_nothing                   shift and go to state 37
    empty                          shift and go to state 38

state 31

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing s_directive . a_or_nothing f_or_nothing d_or_nothing END_BLOCK
    (22) a_or_nothing -> . a_directive
    (23) a_or_nothing -> . empty
    (24) a_directive -> . ACTIONS COLON action_list END_BLOCK
    (1) empty -> .

    ACTIONS         shift and go to state 40
    FUNCTIONS       reduce using rule 1 (empty -> .)
    DIALOGUE        reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    a_directive                    shift and go to state 39
    a_or_nothing                   shift and go to state 41
    empty                          shift and go to state 42

state 32

    (11) item_definition -> ITEM ID COLON desc_or_nothing s_directive . a_or_nothing f_or_nothing END_BLOCK
    (22) a_or_nothing -> . a_directive
    (23) a_or_nothing -> . empty
    (24) a_directive -> . ACTIONS COLON action_list END_BLOCK
    (1) empty -> .

    ACTIONS         shift and go to state 40
    FUNCTIONS       reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    a_directive                    shift and go to state 39
    a_or_nothing                   shift and go to state 43
    empty                          shift and go to state 42

state 33

    (10) setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .

    TRAIT           reduce using rule 10 (setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .)
    CHARACTER       reduce using rule 10 (setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .)
    SETTING         reduce using rule 10 (setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .)
    ITEM            reduce using rule 10 (setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .)
    $end            reduce using rule 10 (setting_definition -> SETTING ID COLON desc_or_nothing s_directive END_BLOCK .)


state 34

    (15) s_directive -> START COLON . start_list END_BLOCK
    (16) start_list -> . statement_list
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 44
    empty                          shift and go to state 46
    start_list                     shift and go to state 45

state 35

    (29) f_directive -> FUNCTIONS . COLON function_list END_BLOCK

    COLON           shift and go to state 47


state 36

    (27) f_or_nothing -> f_directive .

    END_BLOCK       reduce using rule 27 (f_or_nothing -> f_directive .)
    DIALOGUE        reduce using rule 27 (f_or_nothing -> f_directive .)


state 37

    (8) trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing . END_BLOCK

    END_BLOCK       shift and go to state 48


state 38

    (28) f_or_nothing -> empty .

    END_BLOCK       reduce using rule 28 (f_or_nothing -> empty .)
    DIALOGUE        reduce using rule 28 (f_or_nothing -> empty .)


state 39

    (22) a_or_nothing -> a_directive .

    FUNCTIONS       reduce using rule 22 (a_or_nothing -> a_directive .)
    DIALOGUE        reduce using rule 22 (a_or_nothing -> a_directive .)
    END_BLOCK       reduce using rule 22 (a_or_nothing -> a_directive .)


state 40

    (24) a_directive -> ACTIONS . COLON action_list END_BLOCK

    COLON           shift and go to state 49


state 41

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing . f_or_nothing d_or_nothing END_BLOCK
    (27) f_or_nothing -> . f_directive
    (28) f_or_nothing -> . empty
    (29) f_directive -> . FUNCTIONS COLON function_list END_BLOCK
    (1) empty -> .

    FUNCTIONS       shift and go to state 35
    DIALOGUE        reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    f_directive                    shift and go to state 36
    f_or_nothing                   shift and go to state 50
    empty                          shift and go to state 38

state 42

    (23) a_or_nothing -> empty .

    FUNCTIONS       reduce using rule 23 (a_or_nothing -> empty .)
    DIALOGUE        reduce using rule 23 (a_or_nothing -> empty .)
    END_BLOCK       reduce using rule 23 (a_or_nothing -> empty .)


state 43

    (11) item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing . f_or_nothing END_BLOCK
    (27) f_or_nothing -> . f_directive
    (28) f_or_nothing -> . empty
    (29) f_directive -> . FUNCTIONS COLON function_list END_BLOCK
    (1) empty -> .

    FUNCTIONS       shift and go to state 35
    END_BLOCK       reduce using rule 1 (empty -> .)

    f_directive                    shift and go to state 36
    f_or_nothing                   shift and go to state 51
    empty                          shift and go to state 38

state 44

    (16) start_list -> statement_list .
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       reduce using rule 16 (start_list -> statement_list .)
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 45

    (15) s_directive -> START COLON start_list . END_BLOCK

    END_BLOCK       shift and go to state 78


state 46

    (37) statement_list -> empty .

    END_BLOCK       reduce using rule 37 (statement_list -> empty .)
    EXIT            reduce using rule 37 (statement_list -> empty .)
    PRINT           reduce using rule 37 (statement_list -> empty .)
    ADD             reduce using rule 37 (statement_list -> empty .)
    REMOVE          reduce using rule 37 (statement_list -> empty .)
    SET             reduce using rule 37 (statement_list -> empty .)
    MOVE            reduce using rule 37 (statement_list -> empty .)
    INCREASE        reduce using rule 37 (statement_list -> empty .)
    DECREASE        reduce using rule 37 (statement_list -> empty .)
    INITIATE        reduce using rule 37 (statement_list -> empty .)
    IF              reduce using rule 37 (statement_list -> empty .)
    EXECUTE         reduce using rule 37 (statement_list -> empty .)
    GOTO            reduce using rule 37 (statement_list -> empty .)
    USING           reduce using rule 37 (statement_list -> empty .)


state 47

    (29) f_directive -> FUNCTIONS COLON . function_list END_BLOCK
    (30) function_list -> . function_list ID args_or_nothing COLON statement_list END_BLOCK
    (31) function_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)

    empty                          shift and go to state 80
    function_list                  shift and go to state 79

state 48

    (8) trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .

    TRAIT           reduce using rule 8 (trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .)
    CHARACTER       reduce using rule 8 (trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .)
    SETTING         reduce using rule 8 (trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .)
    ITEM            reduce using rule 8 (trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .)
    $end            reduce using rule 8 (trait_definition -> TRAIT ID COLON desc_or_nothing s_directive f_or_nothing END_BLOCK .)


state 49

    (24) a_directive -> ACTIONS COLON . action_list END_BLOCK
    (25) action_list -> . string_value COLON statement_list END_BLOCK action_list
    (26) action_list -> . empty
    (94) string_value -> . STRING_VAL
    (1) empty -> .

    STRING_VAL      shift and go to state 22
    END_BLOCK       reduce using rule 1 (empty -> .)

    empty                          shift and go to state 83
    string_value                   shift and go to state 81
    action_list                    shift and go to state 82

state 50

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing . d_or_nothing END_BLOCK
    (17) d_or_nothing -> . d_directive
    (18) d_or_nothing -> . empty
    (19) d_directive -> . DIALOGUE COLON dialogue_list END_BLOCK
    (1) empty -> .

    DIALOGUE        shift and go to state 85
    END_BLOCK       reduce using rule 1 (empty -> .)

    d_directive                    shift and go to state 84
    d_or_nothing                   shift and go to state 86
    empty                          shift and go to state 87

state 51

    (11) item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing . END_BLOCK

    END_BLOCK       shift and go to state 88


state 52

    (127) move -> MOVE . character_or_nothing TO object_chain
    (128) character_or_nothing -> . object_chain
    (129) character_or_nothing -> . empty
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (1) empty -> .

    ID              shift and go to state 91
    TO              reduce using rule 1 (empty -> .)

    character_or_nothing           shift and go to state 89
    empty                          shift and go to state 92
    object_chain                   shift and go to state 90

state 53

    (41) statement -> set .

    END_BLOCK       reduce using rule 41 (statement -> set .)
    EXIT            reduce using rule 41 (statement -> set .)
    PRINT           reduce using rule 41 (statement -> set .)
    ADD             reduce using rule 41 (statement -> set .)
    REMOVE          reduce using rule 41 (statement -> set .)
    SET             reduce using rule 41 (statement -> set .)
    MOVE            reduce using rule 41 (statement -> set .)
    INCREASE        reduce using rule 41 (statement -> set .)
    DECREASE        reduce using rule 41 (statement -> set .)
    INITIATE        reduce using rule 41 (statement -> set .)
    IF              reduce using rule 41 (statement -> set .)
    EXECUTE         reduce using rule 41 (statement -> set .)
    GOTO            reduce using rule 41 (statement -> set .)
    USING           reduce using rule 41 (statement -> set .)


state 54

    (46) statement -> conditional .

    END_BLOCK       reduce using rule 46 (statement -> conditional .)
    EXIT            reduce using rule 46 (statement -> conditional .)
    PRINT           reduce using rule 46 (statement -> conditional .)
    ADD             reduce using rule 46 (statement -> conditional .)
    REMOVE          reduce using rule 46 (statement -> conditional .)
    SET             reduce using rule 46 (statement -> conditional .)
    MOVE            reduce using rule 46 (statement -> conditional .)
    INCREASE        reduce using rule 46 (statement -> conditional .)
    DECREASE        reduce using rule 46 (statement -> conditional .)
    INITIATE        reduce using rule 46 (statement -> conditional .)
    IF              reduce using rule 46 (statement -> conditional .)
    EXECUTE         reduce using rule 46 (statement -> conditional .)
    GOTO            reduce using rule 46 (statement -> conditional .)
    USING           reduce using rule 46 (statement -> conditional .)


state 55

    (56) goto -> GOTO . LABEL

    LABEL           shift and go to state 93


state 56

    (44) statement -> decrease .

    END_BLOCK       reduce using rule 44 (statement -> decrease .)
    EXIT            reduce using rule 44 (statement -> decrease .)
    PRINT           reduce using rule 44 (statement -> decrease .)
    ADD             reduce using rule 44 (statement -> decrease .)
    REMOVE          reduce using rule 44 (statement -> decrease .)
    SET             reduce using rule 44 (statement -> decrease .)
    MOVE            reduce using rule 44 (statement -> decrease .)
    INCREASE        reduce using rule 44 (statement -> decrease .)
    DECREASE        reduce using rule 44 (statement -> decrease .)
    INITIATE        reduce using rule 44 (statement -> decrease .)
    IF              reduce using rule 44 (statement -> decrease .)
    EXECUTE         reduce using rule 44 (statement -> decrease .)
    GOTO            reduce using rule 44 (statement -> decrease .)
    USING           reduce using rule 44 (statement -> decrease .)


state 57

    (123) remove -> REMOVE . quantity ID from_or_nothing
    (68) quantity -> . LBRACK arithmetic_expression RBRACK
    (69) quantity -> . empty
    (1) empty -> .

    LBRACK          shift and go to state 94
    ID              reduce using rule 1 (empty -> .)

    empty                          shift and go to state 95
    quantity                       shift and go to state 96

state 58

    (65) print -> PRINT . string_expression
    (95) string_expression -> . string_expression CONCAT string_literal
    (96) string_expression -> . string_literal
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (94) string_value -> . STRING_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    STRING_VAL      shift and go to state 22
    ID              shift and go to state 91

    string_expression              shift and go to state 97
    object_chain                   shift and go to state 99
    string_literal                 shift and go to state 98
    string_value                   shift and go to state 100

state 59

    (132) increase -> INCREASE . object_chain BY arithmetic_or_object
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 101

state 60

    (126) set -> SET . object_chain TO arg
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 102

state 61

    (134) initiate -> INITIATE . DIALOGUE AT LABEL

    DIALOGUE        shift and go to state 103


state 62

    (135) using -> USING . string_value
    (94) string_value -> . STRING_VAL

    STRING_VAL      shift and go to state 22

    string_value                   shift and go to state 104

state 63

    (43) statement -> increase .

    END_BLOCK       reduce using rule 43 (statement -> increase .)
    EXIT            reduce using rule 43 (statement -> increase .)
    PRINT           reduce using rule 43 (statement -> increase .)
    ADD             reduce using rule 43 (statement -> increase .)
    REMOVE          reduce using rule 43 (statement -> increase .)
    SET             reduce using rule 43 (statement -> increase .)
    MOVE            reduce using rule 43 (statement -> increase .)
    INCREASE        reduce using rule 43 (statement -> increase .)
    DECREASE        reduce using rule 43 (statement -> increase .)
    INITIATE        reduce using rule 43 (statement -> increase .)
    IF              reduce using rule 43 (statement -> increase .)
    EXECUTE         reduce using rule 43 (statement -> increase .)
    GOTO            reduce using rule 43 (statement -> increase .)
    USING           reduce using rule 43 (statement -> increase .)


state 64

    (39) statement -> add .

    END_BLOCK       reduce using rule 39 (statement -> add .)
    EXIT            reduce using rule 39 (statement -> add .)
    PRINT           reduce using rule 39 (statement -> add .)
    ADD             reduce using rule 39 (statement -> add .)
    REMOVE          reduce using rule 39 (statement -> add .)
    SET             reduce using rule 39 (statement -> add .)
    MOVE            reduce using rule 39 (statement -> add .)
    INCREASE        reduce using rule 39 (statement -> add .)
    DECREASE        reduce using rule 39 (statement -> add .)
    INITIATE        reduce using rule 39 (statement -> add .)
    IF              reduce using rule 39 (statement -> add .)
    EXECUTE         reduce using rule 39 (statement -> add .)
    GOTO            reduce using rule 39 (statement -> add .)
    USING           reduce using rule 39 (statement -> add .)


state 65

    (36) statement_list -> statement_list statement .

    END_BLOCK       reduce using rule 36 (statement_list -> statement_list statement .)
    EXIT            reduce using rule 36 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 36 (statement_list -> statement_list statement .)
    ADD             reduce using rule 36 (statement_list -> statement_list statement .)
    REMOVE          reduce using rule 36 (statement_list -> statement_list statement .)
    SET             reduce using rule 36 (statement_list -> statement_list statement .)
    MOVE            reduce using rule 36 (statement_list -> statement_list statement .)
    INCREASE        reduce using rule 36 (statement_list -> statement_list statement .)
    DECREASE        reduce using rule 36 (statement_list -> statement_list statement .)
    INITIATE        reduce using rule 36 (statement_list -> statement_list statement .)
    IF              reduce using rule 36 (statement_list -> statement_list statement .)
    EXECUTE         reduce using rule 36 (statement_list -> statement_list statement .)
    GOTO            reduce using rule 36 (statement_list -> statement_list statement .)
    USING           reduce using rule 36 (statement_list -> statement_list statement .)


state 66

    (57) execute -> EXECUTE . object_chain passed_args
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 105

state 67

    (38) statement -> print .

    END_BLOCK       reduce using rule 38 (statement -> print .)
    EXIT            reduce using rule 38 (statement -> print .)
    PRINT           reduce using rule 38 (statement -> print .)
    ADD             reduce using rule 38 (statement -> print .)
    REMOVE          reduce using rule 38 (statement -> print .)
    SET             reduce using rule 38 (statement -> print .)
    MOVE            reduce using rule 38 (statement -> print .)
    INCREASE        reduce using rule 38 (statement -> print .)
    DECREASE        reduce using rule 38 (statement -> print .)
    INITIATE        reduce using rule 38 (statement -> print .)
    IF              reduce using rule 38 (statement -> print .)
    EXECUTE         reduce using rule 38 (statement -> print .)
    GOTO            reduce using rule 38 (statement -> print .)
    USING           reduce using rule 38 (statement -> print .)


state 68

    (42) statement -> move .

    END_BLOCK       reduce using rule 42 (statement -> move .)
    EXIT            reduce using rule 42 (statement -> move .)
    PRINT           reduce using rule 42 (statement -> move .)
    ADD             reduce using rule 42 (statement -> move .)
    REMOVE          reduce using rule 42 (statement -> move .)
    SET             reduce using rule 42 (statement -> move .)
    MOVE            reduce using rule 42 (statement -> move .)
    INCREASE        reduce using rule 42 (statement -> move .)
    DECREASE        reduce using rule 42 (statement -> move .)
    INITIATE        reduce using rule 42 (statement -> move .)
    IF              reduce using rule 42 (statement -> move .)
    EXECUTE         reduce using rule 42 (statement -> move .)
    GOTO            reduce using rule 42 (statement -> move .)
    USING           reduce using rule 42 (statement -> move .)


state 69

    (48) statement -> goto .

    END_BLOCK       reduce using rule 48 (statement -> goto .)
    EXIT            reduce using rule 48 (statement -> goto .)
    PRINT           reduce using rule 48 (statement -> goto .)
    ADD             reduce using rule 48 (statement -> goto .)
    REMOVE          reduce using rule 48 (statement -> goto .)
    SET             reduce using rule 48 (statement -> goto .)
    MOVE            reduce using rule 48 (statement -> goto .)
    INCREASE        reduce using rule 48 (statement -> goto .)
    DECREASE        reduce using rule 48 (statement -> goto .)
    INITIATE        reduce using rule 48 (statement -> goto .)
    IF              reduce using rule 48 (statement -> goto .)
    EXECUTE         reduce using rule 48 (statement -> goto .)
    GOTO            reduce using rule 48 (statement -> goto .)
    USING           reduce using rule 48 (statement -> goto .)


state 70

    (66) add -> ADD . quantity ID to_or_nothing
    (67) add -> ADD . primitive
    (68) quantity -> . LBRACK arithmetic_expression RBRACK
    (69) quantity -> . empty
    (84) primitive -> . integer_primitive
    (85) primitive -> . decimal_primitive
    (86) primitive -> . string_primitive
    (87) primitive -> . tf_primitive
    (1) empty -> .
    (88) integer_primitive -> . LBRACE INTEGER ID ASSIGN numeric_literal RBRACE
    (89) decimal_primitive -> . LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE
    (90) string_primitive -> . LBRACE STRING ID ASSIGN string_expression RBRACE
    (91) tf_primitive -> . LBRACE TF ID ASSIGN tf_expression RBRACE

    LBRACK          shift and go to state 94
    ID              reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 110

    string_primitive               shift and go to state 107
    decimal_primitive              shift and go to state 109
    integer_primitive              shift and go to state 108
    primitive                      shift and go to state 106
    tf_primitive                   shift and go to state 111
    empty                          shift and go to state 95
    quantity                       shift and go to state 112

state 71

    (49) statement -> using .

    END_BLOCK       reduce using rule 49 (statement -> using .)
    EXIT            reduce using rule 49 (statement -> using .)
    PRINT           reduce using rule 49 (statement -> using .)
    ADD             reduce using rule 49 (statement -> using .)
    REMOVE          reduce using rule 49 (statement -> using .)
    SET             reduce using rule 49 (statement -> using .)
    MOVE            reduce using rule 49 (statement -> using .)
    INCREASE        reduce using rule 49 (statement -> using .)
    DECREASE        reduce using rule 49 (statement -> using .)
    INITIATE        reduce using rule 49 (statement -> using .)
    IF              reduce using rule 49 (statement -> using .)
    EXECUTE         reduce using rule 49 (statement -> using .)
    GOTO            reduce using rule 49 (statement -> using .)
    USING           reduce using rule 49 (statement -> using .)


state 72

    (51) conditional -> IF . tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 128
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    has_expression                 shift and go to state 119
    tf_expression                  shift and go to state 114
    string_value                   shift and go to state 122

state 73

    (47) statement -> execute .

    END_BLOCK       reduce using rule 47 (statement -> execute .)
    EXIT            reduce using rule 47 (statement -> execute .)
    PRINT           reduce using rule 47 (statement -> execute .)
    ADD             reduce using rule 47 (statement -> execute .)
    REMOVE          reduce using rule 47 (statement -> execute .)
    SET             reduce using rule 47 (statement -> execute .)
    MOVE            reduce using rule 47 (statement -> execute .)
    INCREASE        reduce using rule 47 (statement -> execute .)
    DECREASE        reduce using rule 47 (statement -> execute .)
    INITIATE        reduce using rule 47 (statement -> execute .)
    IF              reduce using rule 47 (statement -> execute .)
    EXECUTE         reduce using rule 47 (statement -> execute .)
    GOTO            reduce using rule 47 (statement -> execute .)
    USING           reduce using rule 47 (statement -> execute .)


state 74

    (40) statement -> remove .

    END_BLOCK       reduce using rule 40 (statement -> remove .)
    EXIT            reduce using rule 40 (statement -> remove .)
    PRINT           reduce using rule 40 (statement -> remove .)
    ADD             reduce using rule 40 (statement -> remove .)
    REMOVE          reduce using rule 40 (statement -> remove .)
    SET             reduce using rule 40 (statement -> remove .)
    MOVE            reduce using rule 40 (statement -> remove .)
    INCREASE        reduce using rule 40 (statement -> remove .)
    DECREASE        reduce using rule 40 (statement -> remove .)
    INITIATE        reduce using rule 40 (statement -> remove .)
    IF              reduce using rule 40 (statement -> remove .)
    EXECUTE         reduce using rule 40 (statement -> remove .)
    GOTO            reduce using rule 40 (statement -> remove .)
    USING           reduce using rule 40 (statement -> remove .)


state 75

    (45) statement -> initiate .

    END_BLOCK       reduce using rule 45 (statement -> initiate .)
    EXIT            reduce using rule 45 (statement -> initiate .)
    PRINT           reduce using rule 45 (statement -> initiate .)
    ADD             reduce using rule 45 (statement -> initiate .)
    REMOVE          reduce using rule 45 (statement -> initiate .)
    SET             reduce using rule 45 (statement -> initiate .)
    MOVE            reduce using rule 45 (statement -> initiate .)
    INCREASE        reduce using rule 45 (statement -> initiate .)
    DECREASE        reduce using rule 45 (statement -> initiate .)
    INITIATE        reduce using rule 45 (statement -> initiate .)
    IF              reduce using rule 45 (statement -> initiate .)
    EXECUTE         reduce using rule 45 (statement -> initiate .)
    GOTO            reduce using rule 45 (statement -> initiate .)
    USING           reduce using rule 45 (statement -> initiate .)


state 76

    (50) statement -> EXIT .

    END_BLOCK       reduce using rule 50 (statement -> EXIT .)
    EXIT            reduce using rule 50 (statement -> EXIT .)
    PRINT           reduce using rule 50 (statement -> EXIT .)
    ADD             reduce using rule 50 (statement -> EXIT .)
    REMOVE          reduce using rule 50 (statement -> EXIT .)
    SET             reduce using rule 50 (statement -> EXIT .)
    MOVE            reduce using rule 50 (statement -> EXIT .)
    INCREASE        reduce using rule 50 (statement -> EXIT .)
    DECREASE        reduce using rule 50 (statement -> EXIT .)
    INITIATE        reduce using rule 50 (statement -> EXIT .)
    IF              reduce using rule 50 (statement -> EXIT .)
    EXECUTE         reduce using rule 50 (statement -> EXIT .)
    GOTO            reduce using rule 50 (statement -> EXIT .)
    USING           reduce using rule 50 (statement -> EXIT .)


state 77

    (133) decrease -> DECREASE . object_chain BY arithmetic_or_object
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 130

state 78

    (15) s_directive -> START COLON start_list END_BLOCK .

    END_BLOCK       reduce using rule 15 (s_directive -> START COLON start_list END_BLOCK .)
    ACTIONS         reduce using rule 15 (s_directive -> START COLON start_list END_BLOCK .)
    FUNCTIONS       reduce using rule 15 (s_directive -> START COLON start_list END_BLOCK .)
    DIALOGUE        reduce using rule 15 (s_directive -> START COLON start_list END_BLOCK .)


state 79

    (29) f_directive -> FUNCTIONS COLON function_list . END_BLOCK
    (30) function_list -> function_list . ID args_or_nothing COLON statement_list END_BLOCK

    END_BLOCK       shift and go to state 131
    ID              shift and go to state 132


state 80

    (31) function_list -> empty .

    END_BLOCK       reduce using rule 31 (function_list -> empty .)
    ID              reduce using rule 31 (function_list -> empty .)


state 81

    (25) action_list -> string_value . COLON statement_list END_BLOCK action_list

    COLON           shift and go to state 133


state 82

    (24) a_directive -> ACTIONS COLON action_list . END_BLOCK

    END_BLOCK       shift and go to state 134


state 83

    (26) action_list -> empty .

    END_BLOCK       reduce using rule 26 (action_list -> empty .)


state 84

    (17) d_or_nothing -> d_directive .

    END_BLOCK       reduce using rule 17 (d_or_nothing -> d_directive .)


state 85

    (19) d_directive -> DIALOGUE . COLON dialogue_list END_BLOCK

    COLON           shift and go to state 135


state 86

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing . END_BLOCK

    END_BLOCK       shift and go to state 136


state 87

    (18) d_or_nothing -> empty .

    END_BLOCK       reduce using rule 18 (d_or_nothing -> empty .)


state 88

    (11) item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .

    TRAIT           reduce using rule 11 (item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .)
    CHARACTER       reduce using rule 11 (item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .)
    SETTING         reduce using rule 11 (item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .)
    ITEM            reduce using rule 11 (item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .)
    $end            reduce using rule 11 (item_definition -> ITEM ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing END_BLOCK .)


state 89

    (127) move -> MOVE character_or_nothing . TO object_chain

    TO              shift and go to state 137


state 90

    (128) character_or_nothing -> object_chain .
    (82) object_chain -> object_chain . ON ID

    TO              reduce using rule 128 (character_or_nothing -> object_chain .)
    ON              shift and go to state 138


state 91

    (83) object_chain -> ID .

    ON              reduce using rule 83 (object_chain -> ID .)
    CONCAT          reduce using rule 83 (object_chain -> ID .)
    EXIT            reduce using rule 83 (object_chain -> ID .)
    PRINT           reduce using rule 83 (object_chain -> ID .)
    ADD             reduce using rule 83 (object_chain -> ID .)
    REMOVE          reduce using rule 83 (object_chain -> ID .)
    SET             reduce using rule 83 (object_chain -> ID .)
    MOVE            reduce using rule 83 (object_chain -> ID .)
    INCREASE        reduce using rule 83 (object_chain -> ID .)
    DECREASE        reduce using rule 83 (object_chain -> ID .)
    INITIATE        reduce using rule 83 (object_chain -> ID .)
    IF              reduce using rule 83 (object_chain -> ID .)
    EXECUTE         reduce using rule 83 (object_chain -> ID .)
    GOTO            reduce using rule 83 (object_chain -> ID .)
    USING           reduce using rule 83 (object_chain -> ID .)
    END_BLOCK       reduce using rule 83 (object_chain -> ID .)
    PLUS            reduce using rule 83 (object_chain -> ID .)
    MINUS           reduce using rule 83 (object_chain -> ID .)
    MODULUS         reduce using rule 83 (object_chain -> ID .)
    DIVIDE          reduce using rule 83 (object_chain -> ID .)
    MULTIPLY        reduce using rule 83 (object_chain -> ID .)
    POWER           reduce using rule 83 (object_chain -> ID .)
    LTHAN           reduce using rule 83 (object_chain -> ID .)
    GTHAN           reduce using rule 83 (object_chain -> ID .)
    LTHANEQ         reduce using rule 83 (object_chain -> ID .)
    GTHANEQ         reduce using rule 83 (object_chain -> ID .)
    ISEQUAL         reduce using rule 83 (object_chain -> ID .)
    NOTEQUAL        reduce using rule 83 (object_chain -> ID .)
    EQUALS          reduce using rule 83 (object_chain -> ID .)
    NOT             reduce using rule 83 (object_chain -> ID .)
    RBRACK          reduce using rule 83 (object_chain -> ID .)
    RPAREN          reduce using rule 83 (object_chain -> ID .)
    COMMA           reduce using rule 83 (object_chain -> ID .)
    COLON           reduce using rule 83 (object_chain -> ID .)
    OR              reduce using rule 83 (object_chain -> ID .)
    AND             reduce using rule 83 (object_chain -> ID .)
    RBRACE          reduce using rule 83 (object_chain -> ID .)
    HAS             reduce using rule 83 (object_chain -> ID .)
    TO              reduce using rule 83 (object_chain -> ID .)
    WITH            reduce using rule 83 (object_chain -> ID .)
    BY              reduce using rule 83 (object_chain -> ID .)


state 92

    (129) character_or_nothing -> empty .

    TO              reduce using rule 129 (character_or_nothing -> empty .)


state 93

    (56) goto -> GOTO LABEL .

    END_BLOCK       reduce using rule 56 (goto -> GOTO LABEL .)
    EXIT            reduce using rule 56 (goto -> GOTO LABEL .)
    PRINT           reduce using rule 56 (goto -> GOTO LABEL .)
    ADD             reduce using rule 56 (goto -> GOTO LABEL .)
    REMOVE          reduce using rule 56 (goto -> GOTO LABEL .)
    SET             reduce using rule 56 (goto -> GOTO LABEL .)
    MOVE            reduce using rule 56 (goto -> GOTO LABEL .)
    INCREASE        reduce using rule 56 (goto -> GOTO LABEL .)
    DECREASE        reduce using rule 56 (goto -> GOTO LABEL .)
    INITIATE        reduce using rule 56 (goto -> GOTO LABEL .)
    IF              reduce using rule 56 (goto -> GOTO LABEL .)
    EXECUTE         reduce using rule 56 (goto -> GOTO LABEL .)
    GOTO            reduce using rule 56 (goto -> GOTO LABEL .)
    USING           reduce using rule 56 (goto -> GOTO LABEL .)


state 94

    (68) quantity -> LBRACK . arithmetic_expression RBRACK
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 139
    arithmetic_or_object           shift and go to state 121
    object_chain                   shift and go to state 141

state 95

    (69) quantity -> empty .

    ID              reduce using rule 69 (quantity -> empty .)


state 96

    (123) remove -> REMOVE quantity . ID from_or_nothing

    ID              shift and go to state 142


state 97

    (65) print -> PRINT string_expression .
    (95) string_expression -> string_expression . CONCAT string_literal

    END_BLOCK       reduce using rule 65 (print -> PRINT string_expression .)
    EXIT            reduce using rule 65 (print -> PRINT string_expression .)
    PRINT           reduce using rule 65 (print -> PRINT string_expression .)
    ADD             reduce using rule 65 (print -> PRINT string_expression .)
    REMOVE          reduce using rule 65 (print -> PRINT string_expression .)
    SET             reduce using rule 65 (print -> PRINT string_expression .)
    MOVE            reduce using rule 65 (print -> PRINT string_expression .)
    INCREASE        reduce using rule 65 (print -> PRINT string_expression .)
    DECREASE        reduce using rule 65 (print -> PRINT string_expression .)
    INITIATE        reduce using rule 65 (print -> PRINT string_expression .)
    IF              reduce using rule 65 (print -> PRINT string_expression .)
    EXECUTE         reduce using rule 65 (print -> PRINT string_expression .)
    GOTO            reduce using rule 65 (print -> PRINT string_expression .)
    USING           reduce using rule 65 (print -> PRINT string_expression .)
    CONCAT          shift and go to state 143


state 98

    (96) string_expression -> string_literal .

    CONCAT          reduce using rule 96 (string_expression -> string_literal .)
    EXIT            reduce using rule 96 (string_expression -> string_literal .)
    PRINT           reduce using rule 96 (string_expression -> string_literal .)
    ADD             reduce using rule 96 (string_expression -> string_literal .)
    REMOVE          reduce using rule 96 (string_expression -> string_literal .)
    SET             reduce using rule 96 (string_expression -> string_literal .)
    MOVE            reduce using rule 96 (string_expression -> string_literal .)
    INCREASE        reduce using rule 96 (string_expression -> string_literal .)
    DECREASE        reduce using rule 96 (string_expression -> string_literal .)
    INITIATE        reduce using rule 96 (string_expression -> string_literal .)
    IF              reduce using rule 96 (string_expression -> string_literal .)
    EXECUTE         reduce using rule 96 (string_expression -> string_literal .)
    GOTO            reduce using rule 96 (string_expression -> string_literal .)
    USING           reduce using rule 96 (string_expression -> string_literal .)
    END_BLOCK       reduce using rule 96 (string_expression -> string_literal .)
    COMMA           reduce using rule 96 (string_expression -> string_literal .)
    RBRACE          reduce using rule 96 (string_expression -> string_literal .)


state 99

    (98) string_literal -> object_chain .
    (82) object_chain -> object_chain . ON ID

    CONCAT          reduce using rule 98 (string_literal -> object_chain .)
    EXIT            reduce using rule 98 (string_literal -> object_chain .)
    PRINT           reduce using rule 98 (string_literal -> object_chain .)
    ADD             reduce using rule 98 (string_literal -> object_chain .)
    REMOVE          reduce using rule 98 (string_literal -> object_chain .)
    SET             reduce using rule 98 (string_literal -> object_chain .)
    MOVE            reduce using rule 98 (string_literal -> object_chain .)
    INCREASE        reduce using rule 98 (string_literal -> object_chain .)
    DECREASE        reduce using rule 98 (string_literal -> object_chain .)
    INITIATE        reduce using rule 98 (string_literal -> object_chain .)
    IF              reduce using rule 98 (string_literal -> object_chain .)
    EXECUTE         reduce using rule 98 (string_literal -> object_chain .)
    GOTO            reduce using rule 98 (string_literal -> object_chain .)
    USING           reduce using rule 98 (string_literal -> object_chain .)
    END_BLOCK       reduce using rule 98 (string_literal -> object_chain .)
    COMMA           reduce using rule 98 (string_literal -> object_chain .)
    RBRACE          reduce using rule 98 (string_literal -> object_chain .)
    ON              shift and go to state 138


state 100

    (97) string_literal -> string_value .

    CONCAT          reduce using rule 97 (string_literal -> string_value .)
    EXIT            reduce using rule 97 (string_literal -> string_value .)
    PRINT           reduce using rule 97 (string_literal -> string_value .)
    ADD             reduce using rule 97 (string_literal -> string_value .)
    REMOVE          reduce using rule 97 (string_literal -> string_value .)
    SET             reduce using rule 97 (string_literal -> string_value .)
    MOVE            reduce using rule 97 (string_literal -> string_value .)
    INCREASE        reduce using rule 97 (string_literal -> string_value .)
    DECREASE        reduce using rule 97 (string_literal -> string_value .)
    INITIATE        reduce using rule 97 (string_literal -> string_value .)
    IF              reduce using rule 97 (string_literal -> string_value .)
    EXECUTE         reduce using rule 97 (string_literal -> string_value .)
    GOTO            reduce using rule 97 (string_literal -> string_value .)
    USING           reduce using rule 97 (string_literal -> string_value .)
    END_BLOCK       reduce using rule 97 (string_literal -> string_value .)
    COMMA           reduce using rule 97 (string_literal -> string_value .)
    RBRACE          reduce using rule 97 (string_literal -> string_value .)


state 101

    (132) increase -> INCREASE object_chain . BY arithmetic_or_object
    (82) object_chain -> object_chain . ON ID

    BY              shift and go to state 144
    ON              shift and go to state 138


state 102

    (126) set -> SET object_chain . TO arg
    (82) object_chain -> object_chain . ON ID

    TO              shift and go to state 145
    ON              shift and go to state 138


state 103

    (134) initiate -> INITIATE DIALOGUE . AT LABEL

    AT              shift and go to state 146


state 104

    (135) using -> USING string_value .

    END_BLOCK       reduce using rule 135 (using -> USING string_value .)
    EXIT            reduce using rule 135 (using -> USING string_value .)
    PRINT           reduce using rule 135 (using -> USING string_value .)
    ADD             reduce using rule 135 (using -> USING string_value .)
    REMOVE          reduce using rule 135 (using -> USING string_value .)
    SET             reduce using rule 135 (using -> USING string_value .)
    MOVE            reduce using rule 135 (using -> USING string_value .)
    INCREASE        reduce using rule 135 (using -> USING string_value .)
    DECREASE        reduce using rule 135 (using -> USING string_value .)
    INITIATE        reduce using rule 135 (using -> USING string_value .)
    IF              reduce using rule 135 (using -> USING string_value .)
    EXECUTE         reduce using rule 135 (using -> USING string_value .)
    GOTO            reduce using rule 135 (using -> USING string_value .)
    USING           reduce using rule 135 (using -> USING string_value .)


state 105

    (57) execute -> EXECUTE object_chain . passed_args
    (82) object_chain -> object_chain . ON ID
    (58) passed_args -> . WITH arg optional_passed_args
    (59) passed_args -> . empty
    (1) empty -> .

    ON              shift and go to state 138
    WITH            shift and go to state 148
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    passed_args                    shift and go to state 147
    empty                          shift and go to state 149

state 106

    (67) add -> ADD primitive .

    EXIT            reduce using rule 67 (add -> ADD primitive .)
    PRINT           reduce using rule 67 (add -> ADD primitive .)
    ADD             reduce using rule 67 (add -> ADD primitive .)
    REMOVE          reduce using rule 67 (add -> ADD primitive .)
    SET             reduce using rule 67 (add -> ADD primitive .)
    MOVE            reduce using rule 67 (add -> ADD primitive .)
    INCREASE        reduce using rule 67 (add -> ADD primitive .)
    DECREASE        reduce using rule 67 (add -> ADD primitive .)
    INITIATE        reduce using rule 67 (add -> ADD primitive .)
    IF              reduce using rule 67 (add -> ADD primitive .)
    EXECUTE         reduce using rule 67 (add -> ADD primitive .)
    GOTO            reduce using rule 67 (add -> ADD primitive .)
    USING           reduce using rule 67 (add -> ADD primitive .)
    END_BLOCK       reduce using rule 67 (add -> ADD primitive .)


state 107

    (86) primitive -> string_primitive .

    EXIT            reduce using rule 86 (primitive -> string_primitive .)
    PRINT           reduce using rule 86 (primitive -> string_primitive .)
    ADD             reduce using rule 86 (primitive -> string_primitive .)
    REMOVE          reduce using rule 86 (primitive -> string_primitive .)
    SET             reduce using rule 86 (primitive -> string_primitive .)
    MOVE            reduce using rule 86 (primitive -> string_primitive .)
    INCREASE        reduce using rule 86 (primitive -> string_primitive .)
    DECREASE        reduce using rule 86 (primitive -> string_primitive .)
    INITIATE        reduce using rule 86 (primitive -> string_primitive .)
    IF              reduce using rule 86 (primitive -> string_primitive .)
    EXECUTE         reduce using rule 86 (primitive -> string_primitive .)
    GOTO            reduce using rule 86 (primitive -> string_primitive .)
    USING           reduce using rule 86 (primitive -> string_primitive .)
    END_BLOCK       reduce using rule 86 (primitive -> string_primitive .)


state 108

    (84) primitive -> integer_primitive .

    EXIT            reduce using rule 84 (primitive -> integer_primitive .)
    PRINT           reduce using rule 84 (primitive -> integer_primitive .)
    ADD             reduce using rule 84 (primitive -> integer_primitive .)
    REMOVE          reduce using rule 84 (primitive -> integer_primitive .)
    SET             reduce using rule 84 (primitive -> integer_primitive .)
    MOVE            reduce using rule 84 (primitive -> integer_primitive .)
    INCREASE        reduce using rule 84 (primitive -> integer_primitive .)
    DECREASE        reduce using rule 84 (primitive -> integer_primitive .)
    INITIATE        reduce using rule 84 (primitive -> integer_primitive .)
    IF              reduce using rule 84 (primitive -> integer_primitive .)
    EXECUTE         reduce using rule 84 (primitive -> integer_primitive .)
    GOTO            reduce using rule 84 (primitive -> integer_primitive .)
    USING           reduce using rule 84 (primitive -> integer_primitive .)
    END_BLOCK       reduce using rule 84 (primitive -> integer_primitive .)


state 109

    (85) primitive -> decimal_primitive .

    EXIT            reduce using rule 85 (primitive -> decimal_primitive .)
    PRINT           reduce using rule 85 (primitive -> decimal_primitive .)
    ADD             reduce using rule 85 (primitive -> decimal_primitive .)
    REMOVE          reduce using rule 85 (primitive -> decimal_primitive .)
    SET             reduce using rule 85 (primitive -> decimal_primitive .)
    MOVE            reduce using rule 85 (primitive -> decimal_primitive .)
    INCREASE        reduce using rule 85 (primitive -> decimal_primitive .)
    DECREASE        reduce using rule 85 (primitive -> decimal_primitive .)
    INITIATE        reduce using rule 85 (primitive -> decimal_primitive .)
    IF              reduce using rule 85 (primitive -> decimal_primitive .)
    EXECUTE         reduce using rule 85 (primitive -> decimal_primitive .)
    GOTO            reduce using rule 85 (primitive -> decimal_primitive .)
    USING           reduce using rule 85 (primitive -> decimal_primitive .)
    END_BLOCK       reduce using rule 85 (primitive -> decimal_primitive .)


state 110

    (88) integer_primitive -> LBRACE . INTEGER ID ASSIGN numeric_literal RBRACE
    (89) decimal_primitive -> LBRACE . DECIMAL ID ASSIGN numeric_literal RBRACE
    (90) string_primitive -> LBRACE . STRING ID ASSIGN string_expression RBRACE
    (91) tf_primitive -> LBRACE . TF ID ASSIGN tf_expression RBRACE

    INTEGER         shift and go to state 152
    DECIMAL         shift and go to state 150
    STRING          shift and go to state 153
    TF              shift and go to state 151


state 111

    (87) primitive -> tf_primitive .

    EXIT            reduce using rule 87 (primitive -> tf_primitive .)
    PRINT           reduce using rule 87 (primitive -> tf_primitive .)
    ADD             reduce using rule 87 (primitive -> tf_primitive .)
    REMOVE          reduce using rule 87 (primitive -> tf_primitive .)
    SET             reduce using rule 87 (primitive -> tf_primitive .)
    MOVE            reduce using rule 87 (primitive -> tf_primitive .)
    INCREASE        reduce using rule 87 (primitive -> tf_primitive .)
    DECREASE        reduce using rule 87 (primitive -> tf_primitive .)
    INITIATE        reduce using rule 87 (primitive -> tf_primitive .)
    IF              reduce using rule 87 (primitive -> tf_primitive .)
    EXECUTE         reduce using rule 87 (primitive -> tf_primitive .)
    GOTO            reduce using rule 87 (primitive -> tf_primitive .)
    USING           reduce using rule 87 (primitive -> tf_primitive .)
    END_BLOCK       reduce using rule 87 (primitive -> tf_primitive .)


state 112

    (66) add -> ADD quantity . ID to_or_nothing

    ID              shift and go to state 154


state 113

    (114) relational_expression -> relational_operand . relational_operator relational_operand
    (115) relational_operator -> . LTHAN
    (116) relational_operator -> . GTHAN
    (117) relational_operator -> . LTHANEQ
    (118) relational_operator -> . GTHANEQ
    (119) relational_operator -> . ISEQUAL
    (120) relational_operator -> . NOTEQUAL
    (121) relational_operator -> . EQUALS
    (122) relational_operator -> . NOT EQUALS

    LTHAN           shift and go to state 159
    GTHAN           shift and go to state 157
    LTHANEQ         shift and go to state 162
    GTHANEQ         shift and go to state 163
    ISEQUAL         shift and go to state 161
    NOTEQUAL        shift and go to state 155
    EQUALS          shift and go to state 158
    NOT             shift and go to state 160

    relational_operator            shift and go to state 156

state 114

    (51) conditional -> IF tf_expression . COLON statement_list END_BLOCK else_if_conditional else_conditional
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    COLON           shift and go to state 165
    OR              shift and go to state 166
    AND             shift and go to state 164


state 115

    (106) tf_literal -> TRUE .

    COLON           reduce using rule 106 (tf_literal -> TRUE .)
    OR              reduce using rule 106 (tf_literal -> TRUE .)
    AND             reduce using rule 106 (tf_literal -> TRUE .)
    LTHAN           reduce using rule 106 (tf_literal -> TRUE .)
    GTHAN           reduce using rule 106 (tf_literal -> TRUE .)
    LTHANEQ         reduce using rule 106 (tf_literal -> TRUE .)
    GTHANEQ         reduce using rule 106 (tf_literal -> TRUE .)
    ISEQUAL         reduce using rule 106 (tf_literal -> TRUE .)
    NOTEQUAL        reduce using rule 106 (tf_literal -> TRUE .)
    EQUALS          reduce using rule 106 (tf_literal -> TRUE .)
    NOT             reduce using rule 106 (tf_literal -> TRUE .)
    RBRACE          reduce using rule 106 (tf_literal -> TRUE .)
    RPAREN          reduce using rule 106 (tf_literal -> TRUE .)
    EXIT            reduce using rule 106 (tf_literal -> TRUE .)
    PRINT           reduce using rule 106 (tf_literal -> TRUE .)
    ADD             reduce using rule 106 (tf_literal -> TRUE .)
    REMOVE          reduce using rule 106 (tf_literal -> TRUE .)
    SET             reduce using rule 106 (tf_literal -> TRUE .)
    MOVE            reduce using rule 106 (tf_literal -> TRUE .)
    INCREASE        reduce using rule 106 (tf_literal -> TRUE .)
    DECREASE        reduce using rule 106 (tf_literal -> TRUE .)
    INITIATE        reduce using rule 106 (tf_literal -> TRUE .)
    IF              reduce using rule 106 (tf_literal -> TRUE .)
    EXECUTE         reduce using rule 106 (tf_literal -> TRUE .)
    GOTO            reduce using rule 106 (tf_literal -> TRUE .)
    USING           reduce using rule 106 (tf_literal -> TRUE .)
    END_BLOCK       reduce using rule 106 (tf_literal -> TRUE .)
    COMMA           reduce using rule 106 (tf_literal -> TRUE .)


state 116

    (76) arithmetic_expression -> MINUS . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 168
    object_chain                   shift and go to state 141

state 117

    (103) tf_expression -> tf_literal .
    (108) relational_operand -> tf_literal .

    OR              reduce using rule 103 (tf_expression -> tf_literal .)
    AND             reduce using rule 103 (tf_expression -> tf_literal .)
    COLON           reduce using rule 103 (tf_expression -> tf_literal .)
    RPAREN          reduce using rule 103 (tf_expression -> tf_literal .)
    EXIT            reduce using rule 103 (tf_expression -> tf_literal .)
    PRINT           reduce using rule 103 (tf_expression -> tf_literal .)
    ADD             reduce using rule 103 (tf_expression -> tf_literal .)
    REMOVE          reduce using rule 103 (tf_expression -> tf_literal .)
    SET             reduce using rule 103 (tf_expression -> tf_literal .)
    MOVE            reduce using rule 103 (tf_expression -> tf_literal .)
    INCREASE        reduce using rule 103 (tf_expression -> tf_literal .)
    DECREASE        reduce using rule 103 (tf_expression -> tf_literal .)
    INITIATE        reduce using rule 103 (tf_expression -> tf_literal .)
    IF              reduce using rule 103 (tf_expression -> tf_literal .)
    EXECUTE         reduce using rule 103 (tf_expression -> tf_literal .)
    GOTO            reduce using rule 103 (tf_expression -> tf_literal .)
    USING           reduce using rule 103 (tf_expression -> tf_literal .)
    END_BLOCK       reduce using rule 103 (tf_expression -> tf_literal .)
    COMMA           reduce using rule 103 (tf_expression -> tf_literal .)
    RBRACE          reduce using rule 103 (tf_expression -> tf_literal .)
    LTHAN           reduce using rule 108 (relational_operand -> tf_literal .)
    GTHAN           reduce using rule 108 (relational_operand -> tf_literal .)
    LTHANEQ         reduce using rule 108 (relational_operand -> tf_literal .)
    GTHANEQ         reduce using rule 108 (relational_operand -> tf_literal .)
    ISEQUAL         reduce using rule 108 (relational_operand -> tf_literal .)
    NOTEQUAL        reduce using rule 108 (relational_operand -> tf_literal .)
    EQUALS          reduce using rule 108 (relational_operand -> tf_literal .)
    NOT             reduce using rule 108 (relational_operand -> tf_literal .)


state 118

    (105) tf_literal -> relational_expression .

    COLON           reduce using rule 105 (tf_literal -> relational_expression .)
    OR              reduce using rule 105 (tf_literal -> relational_expression .)
    AND             reduce using rule 105 (tf_literal -> relational_expression .)
    LTHAN           reduce using rule 105 (tf_literal -> relational_expression .)
    GTHAN           reduce using rule 105 (tf_literal -> relational_expression .)
    LTHANEQ         reduce using rule 105 (tf_literal -> relational_expression .)
    GTHANEQ         reduce using rule 105 (tf_literal -> relational_expression .)
    ISEQUAL         reduce using rule 105 (tf_literal -> relational_expression .)
    NOTEQUAL        reduce using rule 105 (tf_literal -> relational_expression .)
    EQUALS          reduce using rule 105 (tf_literal -> relational_expression .)
    NOT             reduce using rule 105 (tf_literal -> relational_expression .)
    RBRACE          reduce using rule 105 (tf_literal -> relational_expression .)
    RPAREN          reduce using rule 105 (tf_literal -> relational_expression .)
    EXIT            reduce using rule 105 (tf_literal -> relational_expression .)
    PRINT           reduce using rule 105 (tf_literal -> relational_expression .)
    ADD             reduce using rule 105 (tf_literal -> relational_expression .)
    REMOVE          reduce using rule 105 (tf_literal -> relational_expression .)
    SET             reduce using rule 105 (tf_literal -> relational_expression .)
    MOVE            reduce using rule 105 (tf_literal -> relational_expression .)
    INCREASE        reduce using rule 105 (tf_literal -> relational_expression .)
    DECREASE        reduce using rule 105 (tf_literal -> relational_expression .)
    INITIATE        reduce using rule 105 (tf_literal -> relational_expression .)
    IF              reduce using rule 105 (tf_literal -> relational_expression .)
    EXECUTE         reduce using rule 105 (tf_literal -> relational_expression .)
    GOTO            reduce using rule 105 (tf_literal -> relational_expression .)
    USING           reduce using rule 105 (tf_literal -> relational_expression .)
    END_BLOCK       reduce using rule 105 (tf_literal -> relational_expression .)
    COMMA           reduce using rule 105 (tf_literal -> relational_expression .)


state 119

    (104) tf_literal -> has_expression .

    COLON           reduce using rule 104 (tf_literal -> has_expression .)
    OR              reduce using rule 104 (tf_literal -> has_expression .)
    AND             reduce using rule 104 (tf_literal -> has_expression .)
    LTHAN           reduce using rule 104 (tf_literal -> has_expression .)
    GTHAN           reduce using rule 104 (tf_literal -> has_expression .)
    LTHANEQ         reduce using rule 104 (tf_literal -> has_expression .)
    GTHANEQ         reduce using rule 104 (tf_literal -> has_expression .)
    ISEQUAL         reduce using rule 104 (tf_literal -> has_expression .)
    NOTEQUAL        reduce using rule 104 (tf_literal -> has_expression .)
    EQUALS          reduce using rule 104 (tf_literal -> has_expression .)
    NOT             reduce using rule 104 (tf_literal -> has_expression .)
    RBRACE          reduce using rule 104 (tf_literal -> has_expression .)
    RPAREN          reduce using rule 104 (tf_literal -> has_expression .)
    EXIT            reduce using rule 104 (tf_literal -> has_expression .)
    PRINT           reduce using rule 104 (tf_literal -> has_expression .)
    ADD             reduce using rule 104 (tf_literal -> has_expression .)
    REMOVE          reduce using rule 104 (tf_literal -> has_expression .)
    SET             reduce using rule 104 (tf_literal -> has_expression .)
    MOVE            reduce using rule 104 (tf_literal -> has_expression .)
    INCREASE        reduce using rule 104 (tf_literal -> has_expression .)
    DECREASE        reduce using rule 104 (tf_literal -> has_expression .)
    INITIATE        reduce using rule 104 (tf_literal -> has_expression .)
    IF              reduce using rule 104 (tf_literal -> has_expression .)
    EXECUTE         reduce using rule 104 (tf_literal -> has_expression .)
    GOTO            reduce using rule 104 (tf_literal -> has_expression .)
    USING           reduce using rule 104 (tf_literal -> has_expression .)
    END_BLOCK       reduce using rule 104 (tf_literal -> has_expression .)
    COMMA           reduce using rule 104 (tf_literal -> has_expression .)


state 120

    (110) relational_operand -> arithmetic_expression .
    (130) arithmetic_or_object -> arithmetic_expression .

    LTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    LTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    ISEQUAL         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOTEQUAL        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    EQUALS          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOT             reduce using rule 110 (relational_operand -> arithmetic_expression .)
    COLON           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    OR              reduce using rule 110 (relational_operand -> arithmetic_expression .)
    AND             reduce using rule 110 (relational_operand -> arithmetic_expression .)
    RPAREN          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    EXIT            reduce using rule 110 (relational_operand -> arithmetic_expression .)
    PRINT           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    ADD             reduce using rule 110 (relational_operand -> arithmetic_expression .)
    REMOVE          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    SET             reduce using rule 110 (relational_operand -> arithmetic_expression .)
    MOVE            reduce using rule 110 (relational_operand -> arithmetic_expression .)
    INCREASE        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    DECREASE        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    INITIATE        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    IF              reduce using rule 110 (relational_operand -> arithmetic_expression .)
    EXECUTE         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GOTO            reduce using rule 110 (relational_operand -> arithmetic_expression .)
    USING           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    END_BLOCK       reduce using rule 110 (relational_operand -> arithmetic_expression .)
    COMMA           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    RBRACE          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)


state 121

    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    PLUS            shift and go to state 171
    MINUS           shift and go to state 174
    MODULUS         shift and go to state 173
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172
    POWER           shift and go to state 170


state 122

    (111) relational_operand -> string_value .

    LTHAN           reduce using rule 111 (relational_operand -> string_value .)
    GTHAN           reduce using rule 111 (relational_operand -> string_value .)
    LTHANEQ         reduce using rule 111 (relational_operand -> string_value .)
    GTHANEQ         reduce using rule 111 (relational_operand -> string_value .)
    ISEQUAL         reduce using rule 111 (relational_operand -> string_value .)
    NOTEQUAL        reduce using rule 111 (relational_operand -> string_value .)
    EQUALS          reduce using rule 111 (relational_operand -> string_value .)
    NOT             reduce using rule 111 (relational_operand -> string_value .)
    COLON           reduce using rule 111 (relational_operand -> string_value .)
    OR              reduce using rule 111 (relational_operand -> string_value .)
    AND             reduce using rule 111 (relational_operand -> string_value .)
    RPAREN          reduce using rule 111 (relational_operand -> string_value .)
    EXIT            reduce using rule 111 (relational_operand -> string_value .)
    PRINT           reduce using rule 111 (relational_operand -> string_value .)
    ADD             reduce using rule 111 (relational_operand -> string_value .)
    REMOVE          reduce using rule 111 (relational_operand -> string_value .)
    SET             reduce using rule 111 (relational_operand -> string_value .)
    MOVE            reduce using rule 111 (relational_operand -> string_value .)
    INCREASE        reduce using rule 111 (relational_operand -> string_value .)
    DECREASE        reduce using rule 111 (relational_operand -> string_value .)
    INITIATE        reduce using rule 111 (relational_operand -> string_value .)
    IF              reduce using rule 111 (relational_operand -> string_value .)
    EXECUTE         reduce using rule 111 (relational_operand -> string_value .)
    GOTO            reduce using rule 111 (relational_operand -> string_value .)
    USING           reduce using rule 111 (relational_operand -> string_value .)
    END_BLOCK       reduce using rule 111 (relational_operand -> string_value .)
    COMMA           reduce using rule 111 (relational_operand -> string_value .)
    RBRACE          reduce using rule 111 (relational_operand -> string_value .)


state 123

    (102) tf_expression -> LPAREN . tf_expression RPAREN
    (77) arithmetic_expression -> LPAREN . arithmetic_or_object RPAREN
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (94) string_value -> . STRING_VAL

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91
    HAS             shift and go to state 125
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 176
    arithmetic_or_object           shift and go to state 177
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 178
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    has_expression                 shift and go to state 119
    tf_expression                  shift and go to state 175
    string_value                   shift and go to state 122

state 124

    (78) arithmetic_expression -> INTEGER_VAL .

    LTHAN           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    GTHAN           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    LTHANEQ         reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    GTHANEQ         reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    ISEQUAL         reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    NOTEQUAL        reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    EQUALS          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    NOT             reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    PLUS            reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    MINUS           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    MODULUS         reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    DIVIDE          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    MULTIPLY        reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    POWER           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    COLON           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    OR              reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    AND             reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    RPAREN          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    EXIT            reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    PRINT           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    ADD             reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    REMOVE          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    SET             reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    MOVE            reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    INCREASE        reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    DECREASE        reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    INITIATE        reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    IF              reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    EXECUTE         reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    GOTO            reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    USING           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    END_BLOCK       reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    COMMA           reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    RBRACE          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)
    RBRACK          reduce using rule 78 (arithmetic_expression -> INTEGER_VAL .)


state 125

    (113) has_expression -> HAS . ID

    ID              shift and go to state 179


state 126

    (107) tf_literal -> FALSE .

    COLON           reduce using rule 107 (tf_literal -> FALSE .)
    OR              reduce using rule 107 (tf_literal -> FALSE .)
    AND             reduce using rule 107 (tf_literal -> FALSE .)
    LTHAN           reduce using rule 107 (tf_literal -> FALSE .)
    GTHAN           reduce using rule 107 (tf_literal -> FALSE .)
    LTHANEQ         reduce using rule 107 (tf_literal -> FALSE .)
    GTHANEQ         reduce using rule 107 (tf_literal -> FALSE .)
    ISEQUAL         reduce using rule 107 (tf_literal -> FALSE .)
    NOTEQUAL        reduce using rule 107 (tf_literal -> FALSE .)
    EQUALS          reduce using rule 107 (tf_literal -> FALSE .)
    NOT             reduce using rule 107 (tf_literal -> FALSE .)
    RBRACE          reduce using rule 107 (tf_literal -> FALSE .)
    RPAREN          reduce using rule 107 (tf_literal -> FALSE .)
    EXIT            reduce using rule 107 (tf_literal -> FALSE .)
    PRINT           reduce using rule 107 (tf_literal -> FALSE .)
    ADD             reduce using rule 107 (tf_literal -> FALSE .)
    REMOVE          reduce using rule 107 (tf_literal -> FALSE .)
    SET             reduce using rule 107 (tf_literal -> FALSE .)
    MOVE            reduce using rule 107 (tf_literal -> FALSE .)
    INCREASE        reduce using rule 107 (tf_literal -> FALSE .)
    DECREASE        reduce using rule 107 (tf_literal -> FALSE .)
    INITIATE        reduce using rule 107 (tf_literal -> FALSE .)
    IF              reduce using rule 107 (tf_literal -> FALSE .)
    EXECUTE         reduce using rule 107 (tf_literal -> FALSE .)
    GOTO            reduce using rule 107 (tf_literal -> FALSE .)
    USING           reduce using rule 107 (tf_literal -> FALSE .)
    END_BLOCK       reduce using rule 107 (tf_literal -> FALSE .)
    COMMA           reduce using rule 107 (tf_literal -> FALSE .)


state 127

    (79) arithmetic_expression -> DECIMAL_VAL .

    LTHAN           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    GTHAN           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    LTHANEQ         reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    GTHANEQ         reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    ISEQUAL         reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    NOTEQUAL        reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    EQUALS          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    NOT             reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    PLUS            reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    MINUS           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    MODULUS         reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    DIVIDE          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    MULTIPLY        reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    POWER           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    COLON           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    OR              reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    AND             reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    RPAREN          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    EXIT            reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    PRINT           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    ADD             reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    REMOVE          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    SET             reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    MOVE            reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    INCREASE        reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    DECREASE        reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    INITIATE        reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    IF              reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    EXECUTE         reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    GOTO            reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    USING           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    END_BLOCK       reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    COMMA           reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    RBRACE          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)
    RBRACK          reduce using rule 79 (arithmetic_expression -> DECIMAL_VAL .)


state 128

    (112) has_expression -> object_chain . HAS ID
    (82) object_chain -> object_chain . ON ID
    (109) relational_operand -> object_chain .
    (131) arithmetic_or_object -> object_chain .

    HAS             shift and go to state 180
    ON              shift and go to state 138
    LTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    GTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    LTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    GTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    ISEQUAL         reduce using rule 109 (relational_operand -> object_chain .)
    NOTEQUAL        reduce using rule 109 (relational_operand -> object_chain .)
    EQUALS          reduce using rule 109 (relational_operand -> object_chain .)
    NOT             reduce using rule 109 (relational_operand -> object_chain .)
    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)


state 129

    (101) tf_expression -> NOT . tf_expression
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    has_expression                 shift and go to state 119
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    object_chain                   shift and go to state 128
    tf_expression                  shift and go to state 181
    string_value                   shift and go to state 122

state 130

    (133) decrease -> DECREASE object_chain . BY arithmetic_or_object
    (82) object_chain -> object_chain . ON ID

    BY              shift and go to state 182
    ON              shift and go to state 138


state 131

    (29) f_directive -> FUNCTIONS COLON function_list END_BLOCK .

    DIALOGUE        reduce using rule 29 (f_directive -> FUNCTIONS COLON function_list END_BLOCK .)
    END_BLOCK       reduce using rule 29 (f_directive -> FUNCTIONS COLON function_list END_BLOCK .)


state 132

    (30) function_list -> function_list ID . args_or_nothing COLON statement_list END_BLOCK
    (32) args_or_nothing -> . WITH ID optional_args
    (33) args_or_nothing -> . empty
    (1) empty -> .

    WITH            shift and go to state 184
    COLON           reduce using rule 1 (empty -> .)

    empty                          shift and go to state 185
    args_or_nothing                shift and go to state 183

state 133

    (25) action_list -> string_value COLON . statement_list END_BLOCK action_list
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 186
    empty                          shift and go to state 46

state 134

    (24) a_directive -> ACTIONS COLON action_list END_BLOCK .

    FUNCTIONS       reduce using rule 24 (a_directive -> ACTIONS COLON action_list END_BLOCK .)
    DIALOGUE        reduce using rule 24 (a_directive -> ACTIONS COLON action_list END_BLOCK .)
    END_BLOCK       reduce using rule 24 (a_directive -> ACTIONS COLON action_list END_BLOCK .)


state 135

    (19) d_directive -> DIALOGUE COLON . dialogue_list END_BLOCK
    (20) dialogue_list -> . LABEL COLON statement_list END_BLOCK dialogue_list
    (21) dialogue_list -> . empty
    (1) empty -> .

    LABEL           shift and go to state 188
    END_BLOCK       reduce using rule 1 (empty -> .)

    dialogue_list                  shift and go to state 187
    empty                          shift and go to state 189

state 136

    (9) character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .

    TRAIT           reduce using rule 9 (character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .)
    CHARACTER       reduce using rule 9 (character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .)
    SETTING         reduce using rule 9 (character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .)
    ITEM            reduce using rule 9 (character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .)
    $end            reduce using rule 9 (character_definition -> CHARACTER ID COLON desc_or_nothing s_directive a_or_nothing f_or_nothing d_or_nothing END_BLOCK .)


state 137

    (127) move -> MOVE character_or_nothing TO . object_chain
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 190

state 138

    (82) object_chain -> object_chain ON . ID

    ID              shift and go to state 191


state 139

    (68) quantity -> LBRACK arithmetic_expression . RBRACK
    (130) arithmetic_or_object -> arithmetic_expression .

    RBRACK          shift and go to state 192
    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)


state 140

    (77) arithmetic_expression -> LPAREN . arithmetic_or_object RPAREN
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 177
    object_chain                   shift and go to state 141

state 141

    (131) arithmetic_or_object -> object_chain .
    (82) object_chain -> object_chain . ON ID

    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    LTHAN           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    GTHAN           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    LTHANEQ         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    GTHANEQ         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    ISEQUAL         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    NOTEQUAL        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    EQUALS          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    NOT             reduce using rule 131 (arithmetic_or_object -> object_chain .)
    RBRACK          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    RPAREN          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    EXIT            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    PRINT           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    ADD             reduce using rule 131 (arithmetic_or_object -> object_chain .)
    REMOVE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    SET             reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MOVE            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    INCREASE        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DECREASE        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    INITIATE        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    IF              reduce using rule 131 (arithmetic_or_object -> object_chain .)
    EXECUTE         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    GOTO            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    USING           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    END_BLOCK       reduce using rule 131 (arithmetic_or_object -> object_chain .)
    COMMA           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    COLON           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    OR              reduce using rule 131 (arithmetic_or_object -> object_chain .)
    AND             reduce using rule 131 (arithmetic_or_object -> object_chain .)
    RBRACE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    ON              shift and go to state 138


state 142

    (123) remove -> REMOVE quantity ID . from_or_nothing
    (124) from_or_nothing -> . FROM object_chain
    (125) from_or_nothing -> . empty
    (1) empty -> .

    FROM            shift and go to state 193
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    from_or_nothing                shift and go to state 194
    empty                          shift and go to state 195

state 143

    (95) string_expression -> string_expression CONCAT . string_literal
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (94) string_value -> . STRING_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    STRING_VAL      shift and go to state 22
    ID              shift and go to state 91

    object_chain                   shift and go to state 99
    string_literal                 shift and go to state 196
    string_value                   shift and go to state 100

state 144

    (132) increase -> INCREASE object_chain BY . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 197
    object_chain                   shift and go to state 141

state 145

    (126) set -> SET object_chain TO . arg
    (62) arg -> . arithmetic_expression
    (63) arg -> . string_expression
    (64) arg -> . tf_expression
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (95) string_expression -> . string_expression CONCAT string_literal
    (96) string_expression -> . string_literal
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (94) string_value -> . STRING_VAL
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 203
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    NOT             shift and go to state 129
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    ID              shift and go to state 91
    STRING_VAL      shift and go to state 22
    HAS             shift and go to state 125

    arithmetic_expression          shift and go to state 201
    string_expression              shift and go to state 202
    arithmetic_or_object           shift and go to state 121
    string_literal                 shift and go to state 98
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 204
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    arg                            shift and go to state 198
    tf_expression                  shift and go to state 199
    has_expression                 shift and go to state 119
    string_value                   shift and go to state 200

state 146

    (134) initiate -> INITIATE DIALOGUE AT . LABEL

    LABEL           shift and go to state 205


state 147

    (57) execute -> EXECUTE object_chain passed_args .

    END_BLOCK       reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    EXIT            reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    PRINT           reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    ADD             reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    REMOVE          reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    SET             reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    MOVE            reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    INCREASE        reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    DECREASE        reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    INITIATE        reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    IF              reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    EXECUTE         reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    GOTO            reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)
    USING           reduce using rule 57 (execute -> EXECUTE object_chain passed_args .)


state 148

    (58) passed_args -> WITH . arg optional_passed_args
    (62) arg -> . arithmetic_expression
    (63) arg -> . string_expression
    (64) arg -> . tf_expression
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (95) string_expression -> . string_expression CONCAT string_literal
    (96) string_expression -> . string_literal
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (94) string_value -> . STRING_VAL
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 203
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    NOT             shift and go to state 129
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    ID              shift and go to state 91
    STRING_VAL      shift and go to state 22
    HAS             shift and go to state 125

    arithmetic_expression          shift and go to state 201
    arithmetic_or_object           shift and go to state 121
    string_literal                 shift and go to state 98
    string_expression              shift and go to state 202
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 204
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    arg                            shift and go to state 206
    tf_expression                  shift and go to state 199
    has_expression                 shift and go to state 119
    string_value                   shift and go to state 200

state 149

    (59) passed_args -> empty .

    EXIT            reduce using rule 59 (passed_args -> empty .)
    PRINT           reduce using rule 59 (passed_args -> empty .)
    ADD             reduce using rule 59 (passed_args -> empty .)
    REMOVE          reduce using rule 59 (passed_args -> empty .)
    SET             reduce using rule 59 (passed_args -> empty .)
    MOVE            reduce using rule 59 (passed_args -> empty .)
    INCREASE        reduce using rule 59 (passed_args -> empty .)
    DECREASE        reduce using rule 59 (passed_args -> empty .)
    INITIATE        reduce using rule 59 (passed_args -> empty .)
    IF              reduce using rule 59 (passed_args -> empty .)
    EXECUTE         reduce using rule 59 (passed_args -> empty .)
    GOTO            reduce using rule 59 (passed_args -> empty .)
    USING           reduce using rule 59 (passed_args -> empty .)
    END_BLOCK       reduce using rule 59 (passed_args -> empty .)


state 150

    (89) decimal_primitive -> LBRACE DECIMAL . ID ASSIGN numeric_literal RBRACE

    ID              shift and go to state 207


state 151

    (91) tf_primitive -> LBRACE TF . ID ASSIGN tf_expression RBRACE

    ID              shift and go to state 208


state 152

    (88) integer_primitive -> LBRACE INTEGER . ID ASSIGN numeric_literal RBRACE

    ID              shift and go to state 209


state 153

    (90) string_primitive -> LBRACE STRING . ID ASSIGN string_expression RBRACE

    ID              shift and go to state 210


state 154

    (66) add -> ADD quantity ID . to_or_nothing
    (80) to_or_nothing -> . TO object_chain
    (81) to_or_nothing -> . empty
    (1) empty -> .

    TO              shift and go to state 212
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    to_or_nothing                  shift and go to state 211
    empty                          shift and go to state 213

state 155

    (120) relational_operator -> NOTEQUAL .

    TRUE            reduce using rule 120 (relational_operator -> NOTEQUAL .)
    FALSE           reduce using rule 120 (relational_operator -> NOTEQUAL .)
    ID              reduce using rule 120 (relational_operator -> NOTEQUAL .)
    MINUS           reduce using rule 120 (relational_operator -> NOTEQUAL .)
    LPAREN          reduce using rule 120 (relational_operator -> NOTEQUAL .)
    INTEGER_VAL     reduce using rule 120 (relational_operator -> NOTEQUAL .)
    DECIMAL_VAL     reduce using rule 120 (relational_operator -> NOTEQUAL .)
    STRING_VAL      reduce using rule 120 (relational_operator -> NOTEQUAL .)
    HAS             reduce using rule 120 (relational_operator -> NOTEQUAL .)


state 156

    (114) relational_expression -> relational_operand relational_operator . relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22
    HAS             shift and go to state 125

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    string_value                   shift and go to state 122
    relational_operand             shift and go to state 214
    has_expression                 shift and go to state 119
    tf_literal                     shift and go to state 215
    relational_expression          shift and go to state 118
    object_chain                   shift and go to state 216

state 157

    (116) relational_operator -> GTHAN .

    TRUE            reduce using rule 116 (relational_operator -> GTHAN .)
    FALSE           reduce using rule 116 (relational_operator -> GTHAN .)
    ID              reduce using rule 116 (relational_operator -> GTHAN .)
    MINUS           reduce using rule 116 (relational_operator -> GTHAN .)
    LPAREN          reduce using rule 116 (relational_operator -> GTHAN .)
    INTEGER_VAL     reduce using rule 116 (relational_operator -> GTHAN .)
    DECIMAL_VAL     reduce using rule 116 (relational_operator -> GTHAN .)
    STRING_VAL      reduce using rule 116 (relational_operator -> GTHAN .)
    HAS             reduce using rule 116 (relational_operator -> GTHAN .)


state 158

    (121) relational_operator -> EQUALS .

    TRUE            reduce using rule 121 (relational_operator -> EQUALS .)
    FALSE           reduce using rule 121 (relational_operator -> EQUALS .)
    ID              reduce using rule 121 (relational_operator -> EQUALS .)
    MINUS           reduce using rule 121 (relational_operator -> EQUALS .)
    LPAREN          reduce using rule 121 (relational_operator -> EQUALS .)
    INTEGER_VAL     reduce using rule 121 (relational_operator -> EQUALS .)
    DECIMAL_VAL     reduce using rule 121 (relational_operator -> EQUALS .)
    STRING_VAL      reduce using rule 121 (relational_operator -> EQUALS .)
    HAS             reduce using rule 121 (relational_operator -> EQUALS .)


state 159

    (115) relational_operator -> LTHAN .

    TRUE            reduce using rule 115 (relational_operator -> LTHAN .)
    FALSE           reduce using rule 115 (relational_operator -> LTHAN .)
    ID              reduce using rule 115 (relational_operator -> LTHAN .)
    MINUS           reduce using rule 115 (relational_operator -> LTHAN .)
    LPAREN          reduce using rule 115 (relational_operator -> LTHAN .)
    INTEGER_VAL     reduce using rule 115 (relational_operator -> LTHAN .)
    DECIMAL_VAL     reduce using rule 115 (relational_operator -> LTHAN .)
    STRING_VAL      reduce using rule 115 (relational_operator -> LTHAN .)
    HAS             reduce using rule 115 (relational_operator -> LTHAN .)


state 160

    (122) relational_operator -> NOT . EQUALS

    EQUALS          shift and go to state 217


state 161

    (119) relational_operator -> ISEQUAL .

    TRUE            reduce using rule 119 (relational_operator -> ISEQUAL .)
    FALSE           reduce using rule 119 (relational_operator -> ISEQUAL .)
    ID              reduce using rule 119 (relational_operator -> ISEQUAL .)
    MINUS           reduce using rule 119 (relational_operator -> ISEQUAL .)
    LPAREN          reduce using rule 119 (relational_operator -> ISEQUAL .)
    INTEGER_VAL     reduce using rule 119 (relational_operator -> ISEQUAL .)
    DECIMAL_VAL     reduce using rule 119 (relational_operator -> ISEQUAL .)
    STRING_VAL      reduce using rule 119 (relational_operator -> ISEQUAL .)
    HAS             reduce using rule 119 (relational_operator -> ISEQUAL .)


state 162

    (117) relational_operator -> LTHANEQ .

    TRUE            reduce using rule 117 (relational_operator -> LTHANEQ .)
    FALSE           reduce using rule 117 (relational_operator -> LTHANEQ .)
    ID              reduce using rule 117 (relational_operator -> LTHANEQ .)
    MINUS           reduce using rule 117 (relational_operator -> LTHANEQ .)
    LPAREN          reduce using rule 117 (relational_operator -> LTHANEQ .)
    INTEGER_VAL     reduce using rule 117 (relational_operator -> LTHANEQ .)
    DECIMAL_VAL     reduce using rule 117 (relational_operator -> LTHANEQ .)
    STRING_VAL      reduce using rule 117 (relational_operator -> LTHANEQ .)
    HAS             reduce using rule 117 (relational_operator -> LTHANEQ .)


state 163

    (118) relational_operator -> GTHANEQ .

    TRUE            reduce using rule 118 (relational_operator -> GTHANEQ .)
    FALSE           reduce using rule 118 (relational_operator -> GTHANEQ .)
    ID              reduce using rule 118 (relational_operator -> GTHANEQ .)
    MINUS           reduce using rule 118 (relational_operator -> GTHANEQ .)
    LPAREN          reduce using rule 118 (relational_operator -> GTHANEQ .)
    INTEGER_VAL     reduce using rule 118 (relational_operator -> GTHANEQ .)
    DECIMAL_VAL     reduce using rule 118 (relational_operator -> GTHANEQ .)
    STRING_VAL      reduce using rule 118 (relational_operator -> GTHANEQ .)
    HAS             reduce using rule 118 (relational_operator -> GTHANEQ .)


state 164

    (100) tf_expression -> tf_expression AND . tf_expression
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    has_expression                 shift and go to state 119
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    object_chain                   shift and go to state 128
    tf_expression                  shift and go to state 218
    string_value                   shift and go to state 122

state 165

    (51) conditional -> IF tf_expression COLON . statement_list END_BLOCK else_if_conditional else_conditional
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 219
    empty                          shift and go to state 46

state 166

    (99) tf_expression -> tf_expression OR . tf_expression
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    has_expression                 shift and go to state 119
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    object_chain                   shift and go to state 128
    tf_expression                  shift and go to state 220
    string_value                   shift and go to state 122

state 167

    (130) arithmetic_or_object -> arithmetic_expression .

    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    LTHAN           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    GTHAN           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    LTHANEQ         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    GTHANEQ         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    ISEQUAL         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    NOTEQUAL        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    EQUALS          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    NOT             reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    RBRACK          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    RPAREN          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    EXIT            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    PRINT           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    ADD             reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    REMOVE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    SET             reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MOVE            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    INCREASE        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DECREASE        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    INITIATE        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    IF              reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    EXECUTE         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    GOTO            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    USING           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    END_BLOCK       reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    COMMA           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    COLON           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    OR              reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    AND             reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    RBRACE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)


state 168

    (76) arithmetic_expression -> MINUS arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    GTHAN           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    LTHANEQ         reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    GTHANEQ         reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    ISEQUAL         reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    NOTEQUAL        reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    EQUALS          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    NOT             reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    PLUS            reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    MINUS           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    MODULUS         reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    DIVIDE          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    MULTIPLY        reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    POWER           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    COLON           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    OR              reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    AND             reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    RPAREN          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    EXIT            reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    PRINT           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    ADD             reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    REMOVE          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    SET             reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    MOVE            reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    INCREASE        reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    DECREASE        reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    INITIATE        reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    IF              reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    EXECUTE         reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    GOTO            reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    USING           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    END_BLOCK       reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    COMMA           reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    RBRACE          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)
    RBRACK          reduce using rule 76 (arithmetic_expression -> MINUS arithmetic_or_object .)

  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! DIVIDE          [ shift and go to state 169 ]
  ! MULTIPLY        [ shift and go to state 172 ]
  ! POWER           [ shift and go to state 170 ]


state 169

    (73) arithmetic_expression -> arithmetic_or_object DIVIDE . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 221
    object_chain                   shift and go to state 141

state 170

    (75) arithmetic_expression -> arithmetic_or_object POWER . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 222
    object_chain                   shift and go to state 141

state 171

    (70) arithmetic_expression -> arithmetic_or_object PLUS . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 223
    object_chain                   shift and go to state 141

state 172

    (74) arithmetic_expression -> arithmetic_or_object MULTIPLY . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 224
    object_chain                   shift and go to state 141

state 173

    (72) arithmetic_expression -> arithmetic_or_object MODULUS . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 225
    object_chain                   shift and go to state 141

state 174

    (71) arithmetic_expression -> arithmetic_or_object MINUS . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 226
    object_chain                   shift and go to state 141

state 175

    (102) tf_expression -> LPAREN tf_expression . RPAREN
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    RPAREN          shift and go to state 227
    OR              shift and go to state 166
    AND             shift and go to state 164


state 176

    (130) arithmetic_or_object -> arithmetic_expression .
    (110) relational_operand -> arithmetic_expression .

    RPAREN          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    LTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    LTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    ISEQUAL         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOTEQUAL        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    EQUALS          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOT             reduce using rule 110 (relational_operand -> arithmetic_expression .)


state 177

    (77) arithmetic_expression -> LPAREN arithmetic_or_object . RPAREN
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    RPAREN          shift and go to state 228
    PLUS            shift and go to state 171
    MINUS           shift and go to state 174
    MODULUS         shift and go to state 173
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172
    POWER           shift and go to state 170


state 178

    (131) arithmetic_or_object -> object_chain .
    (82) object_chain -> object_chain . ON ID
    (112) has_expression -> object_chain . HAS ID
    (109) relational_operand -> object_chain .

    RPAREN          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    ON              shift and go to state 138
    HAS             shift and go to state 180
    LTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    GTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    LTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    GTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    ISEQUAL         reduce using rule 109 (relational_operand -> object_chain .)
    NOTEQUAL        reduce using rule 109 (relational_operand -> object_chain .)
    EQUALS          reduce using rule 109 (relational_operand -> object_chain .)
    NOT             reduce using rule 109 (relational_operand -> object_chain .)


state 179

    (113) has_expression -> HAS ID .

    COLON           reduce using rule 113 (has_expression -> HAS ID .)
    OR              reduce using rule 113 (has_expression -> HAS ID .)
    AND             reduce using rule 113 (has_expression -> HAS ID .)
    LTHAN           reduce using rule 113 (has_expression -> HAS ID .)
    GTHAN           reduce using rule 113 (has_expression -> HAS ID .)
    LTHANEQ         reduce using rule 113 (has_expression -> HAS ID .)
    GTHANEQ         reduce using rule 113 (has_expression -> HAS ID .)
    ISEQUAL         reduce using rule 113 (has_expression -> HAS ID .)
    NOTEQUAL        reduce using rule 113 (has_expression -> HAS ID .)
    EQUALS          reduce using rule 113 (has_expression -> HAS ID .)
    NOT             reduce using rule 113 (has_expression -> HAS ID .)
    RBRACE          reduce using rule 113 (has_expression -> HAS ID .)
    RPAREN          reduce using rule 113 (has_expression -> HAS ID .)
    EXIT            reduce using rule 113 (has_expression -> HAS ID .)
    PRINT           reduce using rule 113 (has_expression -> HAS ID .)
    ADD             reduce using rule 113 (has_expression -> HAS ID .)
    REMOVE          reduce using rule 113 (has_expression -> HAS ID .)
    SET             reduce using rule 113 (has_expression -> HAS ID .)
    MOVE            reduce using rule 113 (has_expression -> HAS ID .)
    INCREASE        reduce using rule 113 (has_expression -> HAS ID .)
    DECREASE        reduce using rule 113 (has_expression -> HAS ID .)
    INITIATE        reduce using rule 113 (has_expression -> HAS ID .)
    IF              reduce using rule 113 (has_expression -> HAS ID .)
    EXECUTE         reduce using rule 113 (has_expression -> HAS ID .)
    GOTO            reduce using rule 113 (has_expression -> HAS ID .)
    USING           reduce using rule 113 (has_expression -> HAS ID .)
    END_BLOCK       reduce using rule 113 (has_expression -> HAS ID .)
    COMMA           reduce using rule 113 (has_expression -> HAS ID .)


state 180

    (112) has_expression -> object_chain HAS . ID

    ID              shift and go to state 229


state 181

    (101) tf_expression -> NOT tf_expression .
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    OR              reduce using rule 101 (tf_expression -> NOT tf_expression .)
    AND             reduce using rule 101 (tf_expression -> NOT tf_expression .)
    COLON           reduce using rule 101 (tf_expression -> NOT tf_expression .)
    RPAREN          reduce using rule 101 (tf_expression -> NOT tf_expression .)
    EXIT            reduce using rule 101 (tf_expression -> NOT tf_expression .)
    PRINT           reduce using rule 101 (tf_expression -> NOT tf_expression .)
    ADD             reduce using rule 101 (tf_expression -> NOT tf_expression .)
    REMOVE          reduce using rule 101 (tf_expression -> NOT tf_expression .)
    SET             reduce using rule 101 (tf_expression -> NOT tf_expression .)
    MOVE            reduce using rule 101 (tf_expression -> NOT tf_expression .)
    INCREASE        reduce using rule 101 (tf_expression -> NOT tf_expression .)
    DECREASE        reduce using rule 101 (tf_expression -> NOT tf_expression .)
    INITIATE        reduce using rule 101 (tf_expression -> NOT tf_expression .)
    IF              reduce using rule 101 (tf_expression -> NOT tf_expression .)
    EXECUTE         reduce using rule 101 (tf_expression -> NOT tf_expression .)
    GOTO            reduce using rule 101 (tf_expression -> NOT tf_expression .)
    USING           reduce using rule 101 (tf_expression -> NOT tf_expression .)
    END_BLOCK       reduce using rule 101 (tf_expression -> NOT tf_expression .)
    COMMA           reduce using rule 101 (tf_expression -> NOT tf_expression .)
    RBRACE          reduce using rule 101 (tf_expression -> NOT tf_expression .)

  ! OR              [ shift and go to state 166 ]
  ! AND             [ shift and go to state 164 ]


state 182

    (133) decrease -> DECREASE object_chain BY . arithmetic_or_object
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 167
    arithmetic_or_object           shift and go to state 230
    object_chain                   shift and go to state 141

state 183

    (30) function_list -> function_list ID args_or_nothing . COLON statement_list END_BLOCK

    COLON           shift and go to state 231


state 184

    (32) args_or_nothing -> WITH . ID optional_args

    ID              shift and go to state 232


state 185

    (33) args_or_nothing -> empty .

    COLON           reduce using rule 33 (args_or_nothing -> empty .)


state 186

    (25) action_list -> string_value COLON statement_list . END_BLOCK action_list
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 233
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75
    goto                           shift and go to state 69

state 187

    (19) d_directive -> DIALOGUE COLON dialogue_list . END_BLOCK

    END_BLOCK       shift and go to state 234


state 188

    (20) dialogue_list -> LABEL . COLON statement_list END_BLOCK dialogue_list

    COLON           shift and go to state 235


state 189

    (21) dialogue_list -> empty .

    END_BLOCK       reduce using rule 21 (dialogue_list -> empty .)


state 190

    (127) move -> MOVE character_or_nothing TO object_chain .
    (82) object_chain -> object_chain . ON ID

    END_BLOCK       reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    EXIT            reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    PRINT           reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    ADD             reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    REMOVE          reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    SET             reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    MOVE            reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    INCREASE        reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    DECREASE        reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    INITIATE        reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    IF              reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    EXECUTE         reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    GOTO            reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    USING           reduce using rule 127 (move -> MOVE character_or_nothing TO object_chain .)
    ON              shift and go to state 138


state 191

    (82) object_chain -> object_chain ON ID .

    ON              reduce using rule 82 (object_chain -> object_chain ON ID .)
    CONCAT          reduce using rule 82 (object_chain -> object_chain ON ID .)
    EXIT            reduce using rule 82 (object_chain -> object_chain ON ID .)
    PRINT           reduce using rule 82 (object_chain -> object_chain ON ID .)
    ADD             reduce using rule 82 (object_chain -> object_chain ON ID .)
    REMOVE          reduce using rule 82 (object_chain -> object_chain ON ID .)
    SET             reduce using rule 82 (object_chain -> object_chain ON ID .)
    MOVE            reduce using rule 82 (object_chain -> object_chain ON ID .)
    INCREASE        reduce using rule 82 (object_chain -> object_chain ON ID .)
    DECREASE        reduce using rule 82 (object_chain -> object_chain ON ID .)
    INITIATE        reduce using rule 82 (object_chain -> object_chain ON ID .)
    IF              reduce using rule 82 (object_chain -> object_chain ON ID .)
    EXECUTE         reduce using rule 82 (object_chain -> object_chain ON ID .)
    GOTO            reduce using rule 82 (object_chain -> object_chain ON ID .)
    USING           reduce using rule 82 (object_chain -> object_chain ON ID .)
    END_BLOCK       reduce using rule 82 (object_chain -> object_chain ON ID .)
    PLUS            reduce using rule 82 (object_chain -> object_chain ON ID .)
    MINUS           reduce using rule 82 (object_chain -> object_chain ON ID .)
    MODULUS         reduce using rule 82 (object_chain -> object_chain ON ID .)
    DIVIDE          reduce using rule 82 (object_chain -> object_chain ON ID .)
    MULTIPLY        reduce using rule 82 (object_chain -> object_chain ON ID .)
    POWER           reduce using rule 82 (object_chain -> object_chain ON ID .)
    LTHAN           reduce using rule 82 (object_chain -> object_chain ON ID .)
    GTHAN           reduce using rule 82 (object_chain -> object_chain ON ID .)
    LTHANEQ         reduce using rule 82 (object_chain -> object_chain ON ID .)
    GTHANEQ         reduce using rule 82 (object_chain -> object_chain ON ID .)
    ISEQUAL         reduce using rule 82 (object_chain -> object_chain ON ID .)
    NOTEQUAL        reduce using rule 82 (object_chain -> object_chain ON ID .)
    EQUALS          reduce using rule 82 (object_chain -> object_chain ON ID .)
    NOT             reduce using rule 82 (object_chain -> object_chain ON ID .)
    RBRACK          reduce using rule 82 (object_chain -> object_chain ON ID .)
    RPAREN          reduce using rule 82 (object_chain -> object_chain ON ID .)
    COMMA           reduce using rule 82 (object_chain -> object_chain ON ID .)
    COLON           reduce using rule 82 (object_chain -> object_chain ON ID .)
    OR              reduce using rule 82 (object_chain -> object_chain ON ID .)
    AND             reduce using rule 82 (object_chain -> object_chain ON ID .)
    RBRACE          reduce using rule 82 (object_chain -> object_chain ON ID .)
    HAS             reduce using rule 82 (object_chain -> object_chain ON ID .)
    TO              reduce using rule 82 (object_chain -> object_chain ON ID .)
    WITH            reduce using rule 82 (object_chain -> object_chain ON ID .)
    BY              reduce using rule 82 (object_chain -> object_chain ON ID .)


state 192

    (68) quantity -> LBRACK arithmetic_expression RBRACK .

    ID              reduce using rule 68 (quantity -> LBRACK arithmetic_expression RBRACK .)


state 193

    (124) from_or_nothing -> FROM . object_chain
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 236

state 194

    (123) remove -> REMOVE quantity ID from_or_nothing .

    END_BLOCK       reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    EXIT            reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    PRINT           reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    ADD             reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    REMOVE          reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    SET             reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    MOVE            reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    INCREASE        reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    DECREASE        reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    INITIATE        reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    IF              reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    EXECUTE         reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    GOTO            reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)
    USING           reduce using rule 123 (remove -> REMOVE quantity ID from_or_nothing .)


state 195

    (125) from_or_nothing -> empty .

    EXIT            reduce using rule 125 (from_or_nothing -> empty .)
    PRINT           reduce using rule 125 (from_or_nothing -> empty .)
    ADD             reduce using rule 125 (from_or_nothing -> empty .)
    REMOVE          reduce using rule 125 (from_or_nothing -> empty .)
    SET             reduce using rule 125 (from_or_nothing -> empty .)
    MOVE            reduce using rule 125 (from_or_nothing -> empty .)
    INCREASE        reduce using rule 125 (from_or_nothing -> empty .)
    DECREASE        reduce using rule 125 (from_or_nothing -> empty .)
    INITIATE        reduce using rule 125 (from_or_nothing -> empty .)
    IF              reduce using rule 125 (from_or_nothing -> empty .)
    EXECUTE         reduce using rule 125 (from_or_nothing -> empty .)
    GOTO            reduce using rule 125 (from_or_nothing -> empty .)
    USING           reduce using rule 125 (from_or_nothing -> empty .)
    END_BLOCK       reduce using rule 125 (from_or_nothing -> empty .)


state 196

    (95) string_expression -> string_expression CONCAT string_literal .

    CONCAT          reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    EXIT            reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    PRINT           reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    ADD             reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    REMOVE          reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    SET             reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    MOVE            reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    INCREASE        reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    DECREASE        reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    INITIATE        reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    IF              reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    EXECUTE         reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    GOTO            reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    USING           reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    END_BLOCK       reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    COMMA           reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)
    RBRACE          reduce using rule 95 (string_expression -> string_expression CONCAT string_literal .)


state 197

    (132) increase -> INCREASE object_chain BY arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    END_BLOCK       reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    EXIT            reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    PRINT           reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    ADD             reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    REMOVE          reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    SET             reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    MOVE            reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    INCREASE        reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    DECREASE        reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    INITIATE        reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    IF              reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    EXECUTE         reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    GOTO            reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    USING           reduce using rule 132 (increase -> INCREASE object_chain BY arithmetic_or_object .)
    PLUS            shift and go to state 171
    MINUS           shift and go to state 174
    MODULUS         shift and go to state 173
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172
    POWER           shift and go to state 170


state 198

    (126) set -> SET object_chain TO arg .

    END_BLOCK       reduce using rule 126 (set -> SET object_chain TO arg .)
    EXIT            reduce using rule 126 (set -> SET object_chain TO arg .)
    PRINT           reduce using rule 126 (set -> SET object_chain TO arg .)
    ADD             reduce using rule 126 (set -> SET object_chain TO arg .)
    REMOVE          reduce using rule 126 (set -> SET object_chain TO arg .)
    SET             reduce using rule 126 (set -> SET object_chain TO arg .)
    MOVE            reduce using rule 126 (set -> SET object_chain TO arg .)
    INCREASE        reduce using rule 126 (set -> SET object_chain TO arg .)
    DECREASE        reduce using rule 126 (set -> SET object_chain TO arg .)
    INITIATE        reduce using rule 126 (set -> SET object_chain TO arg .)
    IF              reduce using rule 126 (set -> SET object_chain TO arg .)
    EXECUTE         reduce using rule 126 (set -> SET object_chain TO arg .)
    GOTO            reduce using rule 126 (set -> SET object_chain TO arg .)
    USING           reduce using rule 126 (set -> SET object_chain TO arg .)


state 199

    (64) arg -> tf_expression .
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    COMMA           reduce using rule 64 (arg -> tf_expression .)
    EXIT            reduce using rule 64 (arg -> tf_expression .)
    PRINT           reduce using rule 64 (arg -> tf_expression .)
    ADD             reduce using rule 64 (arg -> tf_expression .)
    REMOVE          reduce using rule 64 (arg -> tf_expression .)
    SET             reduce using rule 64 (arg -> tf_expression .)
    MOVE            reduce using rule 64 (arg -> tf_expression .)
    INCREASE        reduce using rule 64 (arg -> tf_expression .)
    DECREASE        reduce using rule 64 (arg -> tf_expression .)
    INITIATE        reduce using rule 64 (arg -> tf_expression .)
    IF              reduce using rule 64 (arg -> tf_expression .)
    EXECUTE         reduce using rule 64 (arg -> tf_expression .)
    GOTO            reduce using rule 64 (arg -> tf_expression .)
    USING           reduce using rule 64 (arg -> tf_expression .)
    END_BLOCK       reduce using rule 64 (arg -> tf_expression .)
    OR              shift and go to state 166
    AND             shift and go to state 164


state 200

    (97) string_literal -> string_value .
    (111) relational_operand -> string_value .

    CONCAT          reduce using rule 97 (string_literal -> string_value .)
    COMMA           reduce using rule 97 (string_literal -> string_value .)
    EXIT            reduce using rule 97 (string_literal -> string_value .)
    PRINT           reduce using rule 97 (string_literal -> string_value .)
    ADD             reduce using rule 97 (string_literal -> string_value .)
    REMOVE          reduce using rule 97 (string_literal -> string_value .)
    SET             reduce using rule 97 (string_literal -> string_value .)
    MOVE            reduce using rule 97 (string_literal -> string_value .)
    INCREASE        reduce using rule 97 (string_literal -> string_value .)
    DECREASE        reduce using rule 97 (string_literal -> string_value .)
    INITIATE        reduce using rule 97 (string_literal -> string_value .)
    IF              reduce using rule 97 (string_literal -> string_value .)
    EXECUTE         reduce using rule 97 (string_literal -> string_value .)
    GOTO            reduce using rule 97 (string_literal -> string_value .)
    USING           reduce using rule 97 (string_literal -> string_value .)
    END_BLOCK       reduce using rule 97 (string_literal -> string_value .)
    LTHAN           reduce using rule 111 (relational_operand -> string_value .)
    GTHAN           reduce using rule 111 (relational_operand -> string_value .)
    LTHANEQ         reduce using rule 111 (relational_operand -> string_value .)
    GTHANEQ         reduce using rule 111 (relational_operand -> string_value .)
    ISEQUAL         reduce using rule 111 (relational_operand -> string_value .)
    NOTEQUAL        reduce using rule 111 (relational_operand -> string_value .)
    EQUALS          reduce using rule 111 (relational_operand -> string_value .)
    NOT             reduce using rule 111 (relational_operand -> string_value .)


state 201

    (62) arg -> arithmetic_expression .
    (130) arithmetic_or_object -> arithmetic_expression .
    (110) relational_operand -> arithmetic_expression .

    COMMA           reduce using rule 62 (arg -> arithmetic_expression .)
    EXIT            reduce using rule 62 (arg -> arithmetic_expression .)
    PRINT           reduce using rule 62 (arg -> arithmetic_expression .)
    ADD             reduce using rule 62 (arg -> arithmetic_expression .)
    REMOVE          reduce using rule 62 (arg -> arithmetic_expression .)
    SET             reduce using rule 62 (arg -> arithmetic_expression .)
    MOVE            reduce using rule 62 (arg -> arithmetic_expression .)
    INCREASE        reduce using rule 62 (arg -> arithmetic_expression .)
    DECREASE        reduce using rule 62 (arg -> arithmetic_expression .)
    INITIATE        reduce using rule 62 (arg -> arithmetic_expression .)
    IF              reduce using rule 62 (arg -> arithmetic_expression .)
    EXECUTE         reduce using rule 62 (arg -> arithmetic_expression .)
    GOTO            reduce using rule 62 (arg -> arithmetic_expression .)
    USING           reduce using rule 62 (arg -> arithmetic_expression .)
    END_BLOCK       reduce using rule 62 (arg -> arithmetic_expression .)
    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    LTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHAN           reduce using rule 110 (relational_operand -> arithmetic_expression .)
    LTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    GTHANEQ         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    ISEQUAL         reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOTEQUAL        reduce using rule 110 (relational_operand -> arithmetic_expression .)
    EQUALS          reduce using rule 110 (relational_operand -> arithmetic_expression .)
    NOT             reduce using rule 110 (relational_operand -> arithmetic_expression .)


state 202

    (63) arg -> string_expression .
    (95) string_expression -> string_expression . CONCAT string_literal

    COMMA           reduce using rule 63 (arg -> string_expression .)
    EXIT            reduce using rule 63 (arg -> string_expression .)
    PRINT           reduce using rule 63 (arg -> string_expression .)
    ADD             reduce using rule 63 (arg -> string_expression .)
    REMOVE          reduce using rule 63 (arg -> string_expression .)
    SET             reduce using rule 63 (arg -> string_expression .)
    MOVE            reduce using rule 63 (arg -> string_expression .)
    INCREASE        reduce using rule 63 (arg -> string_expression .)
    DECREASE        reduce using rule 63 (arg -> string_expression .)
    INITIATE        reduce using rule 63 (arg -> string_expression .)
    IF              reduce using rule 63 (arg -> string_expression .)
    EXECUTE         reduce using rule 63 (arg -> string_expression .)
    GOTO            reduce using rule 63 (arg -> string_expression .)
    USING           reduce using rule 63 (arg -> string_expression .)
    END_BLOCK       reduce using rule 63 (arg -> string_expression .)
    CONCAT          shift and go to state 143


state 203

    (77) arithmetic_expression -> LPAREN . arithmetic_or_object RPAREN
    (102) tf_expression -> LPAREN . tf_expression RPAREN
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (94) string_value -> . STRING_VAL

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 176
    arithmetic_or_object           shift and go to state 177
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 178
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    has_expression                 shift and go to state 119
    tf_expression                  shift and go to state 175
    string_value                   shift and go to state 122

state 204

    (131) arithmetic_or_object -> object_chain .
    (98) string_literal -> object_chain .
    (82) object_chain -> object_chain . ON ID
    (112) has_expression -> object_chain . HAS ID
    (109) relational_operand -> object_chain .

    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    CONCAT          reduce using rule 98 (string_literal -> object_chain .)
    COMMA           reduce using rule 98 (string_literal -> object_chain .)
    EXIT            reduce using rule 98 (string_literal -> object_chain .)
    PRINT           reduce using rule 98 (string_literal -> object_chain .)
    ADD             reduce using rule 98 (string_literal -> object_chain .)
    REMOVE          reduce using rule 98 (string_literal -> object_chain .)
    SET             reduce using rule 98 (string_literal -> object_chain .)
    MOVE            reduce using rule 98 (string_literal -> object_chain .)
    INCREASE        reduce using rule 98 (string_literal -> object_chain .)
    DECREASE        reduce using rule 98 (string_literal -> object_chain .)
    INITIATE        reduce using rule 98 (string_literal -> object_chain .)
    IF              reduce using rule 98 (string_literal -> object_chain .)
    EXECUTE         reduce using rule 98 (string_literal -> object_chain .)
    GOTO            reduce using rule 98 (string_literal -> object_chain .)
    USING           reduce using rule 98 (string_literal -> object_chain .)
    END_BLOCK       reduce using rule 98 (string_literal -> object_chain .)
    ON              shift and go to state 138
    HAS             shift and go to state 180
    LTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    GTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    LTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    GTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    ISEQUAL         reduce using rule 109 (relational_operand -> object_chain .)
    NOTEQUAL        reduce using rule 109 (relational_operand -> object_chain .)
    EQUALS          reduce using rule 109 (relational_operand -> object_chain .)
    NOT             reduce using rule 109 (relational_operand -> object_chain .)


state 205

    (134) initiate -> INITIATE DIALOGUE AT LABEL .

    END_BLOCK       reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    EXIT            reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    PRINT           reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    ADD             reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    REMOVE          reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    SET             reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    MOVE            reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    INCREASE        reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    DECREASE        reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    INITIATE        reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    IF              reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    EXECUTE         reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    GOTO            reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)
    USING           reduce using rule 134 (initiate -> INITIATE DIALOGUE AT LABEL .)


state 206

    (58) passed_args -> WITH arg . optional_passed_args
    (60) optional_passed_args -> . optional_passed_args COMMA arg
    (61) optional_passed_args -> . empty
    (1) empty -> .

    COMMA           reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    optional_passed_args           shift and go to state 237
    empty                          shift and go to state 238

state 207

    (89) decimal_primitive -> LBRACE DECIMAL ID . ASSIGN numeric_literal RBRACE

    ASSIGN          shift and go to state 239


state 208

    (91) tf_primitive -> LBRACE TF ID . ASSIGN tf_expression RBRACE

    ASSIGN          shift and go to state 240


state 209

    (88) integer_primitive -> LBRACE INTEGER ID . ASSIGN numeric_literal RBRACE

    ASSIGN          shift and go to state 241


state 210

    (90) string_primitive -> LBRACE STRING ID . ASSIGN string_expression RBRACE

    ASSIGN          shift and go to state 242


state 211

    (66) add -> ADD quantity ID to_or_nothing .

    EXIT            reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    PRINT           reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    ADD             reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    REMOVE          reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    SET             reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    MOVE            reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    INCREASE        reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    DECREASE        reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    INITIATE        reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    IF              reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    EXECUTE         reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    GOTO            reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    USING           reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)
    END_BLOCK       reduce using rule 66 (add -> ADD quantity ID to_or_nothing .)


state 212

    (80) to_or_nothing -> TO . object_chain
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    ID              shift and go to state 91

    object_chain                   shift and go to state 243

state 213

    (81) to_or_nothing -> empty .

    EXIT            reduce using rule 81 (to_or_nothing -> empty .)
    PRINT           reduce using rule 81 (to_or_nothing -> empty .)
    ADD             reduce using rule 81 (to_or_nothing -> empty .)
    REMOVE          reduce using rule 81 (to_or_nothing -> empty .)
    SET             reduce using rule 81 (to_or_nothing -> empty .)
    MOVE            reduce using rule 81 (to_or_nothing -> empty .)
    INCREASE        reduce using rule 81 (to_or_nothing -> empty .)
    DECREASE        reduce using rule 81 (to_or_nothing -> empty .)
    INITIATE        reduce using rule 81 (to_or_nothing -> empty .)
    IF              reduce using rule 81 (to_or_nothing -> empty .)
    EXECUTE         reduce using rule 81 (to_or_nothing -> empty .)
    GOTO            reduce using rule 81 (to_or_nothing -> empty .)
    USING           reduce using rule 81 (to_or_nothing -> empty .)
    END_BLOCK       reduce using rule 81 (to_or_nothing -> empty .)


state 214

    (114) relational_expression -> relational_operand relational_operator relational_operand .
    (114) relational_expression -> relational_operand . relational_operator relational_operand
    (115) relational_operator -> . LTHAN
    (116) relational_operator -> . GTHAN
    (117) relational_operator -> . LTHANEQ
    (118) relational_operator -> . GTHANEQ
    (119) relational_operator -> . ISEQUAL
    (120) relational_operator -> . NOTEQUAL
    (121) relational_operator -> . EQUALS
    (122) relational_operator -> . NOT EQUALS

  ! shift/reduce conflict for LTHAN resolved as shift
  ! shift/reduce conflict for GTHAN resolved as shift
  ! shift/reduce conflict for LTHANEQ resolved as shift
  ! shift/reduce conflict for GTHANEQ resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    OR              reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    AND             reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    COMMA           reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    EXIT            reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    PRINT           reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    ADD             reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    REMOVE          reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    SET             reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    MOVE            reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    INCREASE        reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    DECREASE        reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    INITIATE        reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    IF              reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    EXECUTE         reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    GOTO            reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    USING           reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    END_BLOCK       reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    RBRACE          reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    COLON           reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    RPAREN          reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .)
    LTHAN           shift and go to state 159
    GTHAN           shift and go to state 157
    LTHANEQ         shift and go to state 162
    GTHANEQ         shift and go to state 163
    ISEQUAL         shift and go to state 161
    NOTEQUAL        shift and go to state 155
    EQUALS          shift and go to state 158
    NOT             shift and go to state 160

  ! LTHAN           [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! GTHAN           [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! LTHANEQ         [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! GTHANEQ         [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! ISEQUAL         [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! NOTEQUAL        [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! EQUALS          [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]
  ! NOT             [ reduce using rule 114 (relational_expression -> relational_operand relational_operator relational_operand .) ]

    relational_operator            shift and go to state 156

state 215

    (108) relational_operand -> tf_literal .

    LTHAN           reduce using rule 108 (relational_operand -> tf_literal .)
    GTHAN           reduce using rule 108 (relational_operand -> tf_literal .)
    LTHANEQ         reduce using rule 108 (relational_operand -> tf_literal .)
    GTHANEQ         reduce using rule 108 (relational_operand -> tf_literal .)
    ISEQUAL         reduce using rule 108 (relational_operand -> tf_literal .)
    NOTEQUAL        reduce using rule 108 (relational_operand -> tf_literal .)
    EQUALS          reduce using rule 108 (relational_operand -> tf_literal .)
    NOT             reduce using rule 108 (relational_operand -> tf_literal .)
    COLON           reduce using rule 108 (relational_operand -> tf_literal .)
    OR              reduce using rule 108 (relational_operand -> tf_literal .)
    AND             reduce using rule 108 (relational_operand -> tf_literal .)
    RPAREN          reduce using rule 108 (relational_operand -> tf_literal .)
    EXIT            reduce using rule 108 (relational_operand -> tf_literal .)
    PRINT           reduce using rule 108 (relational_operand -> tf_literal .)
    ADD             reduce using rule 108 (relational_operand -> tf_literal .)
    REMOVE          reduce using rule 108 (relational_operand -> tf_literal .)
    SET             reduce using rule 108 (relational_operand -> tf_literal .)
    MOVE            reduce using rule 108 (relational_operand -> tf_literal .)
    INCREASE        reduce using rule 108 (relational_operand -> tf_literal .)
    DECREASE        reduce using rule 108 (relational_operand -> tf_literal .)
    INITIATE        reduce using rule 108 (relational_operand -> tf_literal .)
    IF              reduce using rule 108 (relational_operand -> tf_literal .)
    EXECUTE         reduce using rule 108 (relational_operand -> tf_literal .)
    GOTO            reduce using rule 108 (relational_operand -> tf_literal .)
    USING           reduce using rule 108 (relational_operand -> tf_literal .)
    END_BLOCK       reduce using rule 108 (relational_operand -> tf_literal .)
    COMMA           reduce using rule 108 (relational_operand -> tf_literal .)
    RBRACE          reduce using rule 108 (relational_operand -> tf_literal .)


state 216

    (109) relational_operand -> object_chain .
    (82) object_chain -> object_chain . ON ID
    (112) has_expression -> object_chain . HAS ID
    (131) arithmetic_or_object -> object_chain .

    LTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    GTHAN           reduce using rule 109 (relational_operand -> object_chain .)
    LTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    GTHANEQ         reduce using rule 109 (relational_operand -> object_chain .)
    ISEQUAL         reduce using rule 109 (relational_operand -> object_chain .)
    NOTEQUAL        reduce using rule 109 (relational_operand -> object_chain .)
    EQUALS          reduce using rule 109 (relational_operand -> object_chain .)
    NOT             reduce using rule 109 (relational_operand -> object_chain .)
    COLON           reduce using rule 109 (relational_operand -> object_chain .)
    OR              reduce using rule 109 (relational_operand -> object_chain .)
    AND             reduce using rule 109 (relational_operand -> object_chain .)
    RPAREN          reduce using rule 109 (relational_operand -> object_chain .)
    EXIT            reduce using rule 109 (relational_operand -> object_chain .)
    PRINT           reduce using rule 109 (relational_operand -> object_chain .)
    ADD             reduce using rule 109 (relational_operand -> object_chain .)
    REMOVE          reduce using rule 109 (relational_operand -> object_chain .)
    SET             reduce using rule 109 (relational_operand -> object_chain .)
    MOVE            reduce using rule 109 (relational_operand -> object_chain .)
    INCREASE        reduce using rule 109 (relational_operand -> object_chain .)
    DECREASE        reduce using rule 109 (relational_operand -> object_chain .)
    INITIATE        reduce using rule 109 (relational_operand -> object_chain .)
    IF              reduce using rule 109 (relational_operand -> object_chain .)
    EXECUTE         reduce using rule 109 (relational_operand -> object_chain .)
    GOTO            reduce using rule 109 (relational_operand -> object_chain .)
    USING           reduce using rule 109 (relational_operand -> object_chain .)
    END_BLOCK       reduce using rule 109 (relational_operand -> object_chain .)
    COMMA           reduce using rule 109 (relational_operand -> object_chain .)
    RBRACE          reduce using rule 109 (relational_operand -> object_chain .)
    ON              shift and go to state 138
    HAS             shift and go to state 180
    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)


state 217

    (122) relational_operator -> NOT EQUALS .

    TRUE            reduce using rule 122 (relational_operator -> NOT EQUALS .)
    FALSE           reduce using rule 122 (relational_operator -> NOT EQUALS .)
    ID              reduce using rule 122 (relational_operator -> NOT EQUALS .)
    MINUS           reduce using rule 122 (relational_operator -> NOT EQUALS .)
    LPAREN          reduce using rule 122 (relational_operator -> NOT EQUALS .)
    INTEGER_VAL     reduce using rule 122 (relational_operator -> NOT EQUALS .)
    DECIMAL_VAL     reduce using rule 122 (relational_operator -> NOT EQUALS .)
    STRING_VAL      reduce using rule 122 (relational_operator -> NOT EQUALS .)
    HAS             reduce using rule 122 (relational_operator -> NOT EQUALS .)


state 218

    (100) tf_expression -> tf_expression AND tf_expression .
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    OR              reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    AND             reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    COLON           reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    RPAREN          reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    EXIT            reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    PRINT           reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    ADD             reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    REMOVE          reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    SET             reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    MOVE            reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    INCREASE        reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    DECREASE        reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    INITIATE        reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    IF              reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    EXECUTE         reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    GOTO            reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    USING           reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    END_BLOCK       reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    COMMA           reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)
    RBRACE          reduce using rule 100 (tf_expression -> tf_expression AND tf_expression .)

  ! OR              [ shift and go to state 166 ]
  ! AND             [ shift and go to state 164 ]


state 219

    (51) conditional -> IF tf_expression COLON statement_list . END_BLOCK else_if_conditional else_conditional
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 244
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 220

    (99) tf_expression -> tf_expression OR tf_expression .
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    OR              reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    AND             reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    COLON           reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    RPAREN          reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    EXIT            reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    PRINT           reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    ADD             reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    REMOVE          reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    SET             reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    MOVE            reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    INCREASE        reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    DECREASE        reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    INITIATE        reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    IF              reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    EXECUTE         reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    GOTO            reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    USING           reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    END_BLOCK       reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    COMMA           reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)
    RBRACE          reduce using rule 99 (tf_expression -> tf_expression OR tf_expression .)

  ! OR              [ shift and go to state 166 ]
  ! AND             [ shift and go to state 164 ]


state 221

    (73) arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    GTHAN           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    LTHANEQ         reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    GTHANEQ         reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    ISEQUAL         reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    NOTEQUAL        reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    EQUALS          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    NOT             reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    PLUS            reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    MINUS           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    MODULUS         reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    DIVIDE          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    MULTIPLY        reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    POWER           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    COLON           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    OR              reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    AND             reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    RPAREN          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    EXIT            reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    PRINT           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    ADD             reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    REMOVE          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    SET             reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    MOVE            reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    INCREASE        reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    DECREASE        reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    INITIATE        reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    IF              reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    EXECUTE         reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    GOTO            reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    USING           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    END_BLOCK       reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    COMMA           reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    RBRACE          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)
    RBRACK          reduce using rule 73 (arithmetic_expression -> arithmetic_or_object DIVIDE arithmetic_or_object .)

  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! DIVIDE          [ shift and go to state 169 ]
  ! MULTIPLY        [ shift and go to state 172 ]
  ! POWER           [ shift and go to state 170 ]


state 222

    (75) arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    LTHAN           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    GTHAN           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    LTHANEQ         reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    GTHANEQ         reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    ISEQUAL         reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    NOTEQUAL        reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    EQUALS          reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    NOT             reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    COLON           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    OR              reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    AND             reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    RPAREN          reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    EXIT            reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    PRINT           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    ADD             reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    REMOVE          reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    SET             reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    MOVE            reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    INCREASE        reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    DECREASE        reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    INITIATE        reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    IF              reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    EXECUTE         reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    GOTO            reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    USING           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    END_BLOCK       reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    COMMA           reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    RBRACE          reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    RBRACK          reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .)
    PLUS            shift and go to state 171
    MINUS           shift and go to state 174
    MODULUS         shift and go to state 173
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172
    POWER           shift and go to state 170

  ! PLUS            [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]
  ! MINUS           [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]
  ! MODULUS         [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]
  ! DIVIDE          [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]
  ! MULTIPLY        [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]
  ! POWER           [ reduce using rule 75 (arithmetic_expression -> arithmetic_or_object POWER arithmetic_or_object .) ]


state 223

    (70) arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    GTHAN           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    LTHANEQ         reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    GTHANEQ         reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    ISEQUAL         reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    NOTEQUAL        reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    EQUALS          reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    NOT             reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    PLUS            reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    MINUS           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    MODULUS         reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    POWER           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    COLON           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    OR              reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    AND             reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    RPAREN          reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    EXIT            reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    PRINT           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    ADD             reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    REMOVE          reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    SET             reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    MOVE            reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    INCREASE        reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    DECREASE        reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    INITIATE        reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    IF              reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    EXECUTE         reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    GOTO            reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    USING           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    END_BLOCK       reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    COMMA           reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    RBRACE          reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    RBRACK          reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .)
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172

  ! DIVIDE          [ reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .) ]
  ! MULTIPLY        [ reduce using rule 70 (arithmetic_expression -> arithmetic_or_object PLUS arithmetic_or_object .) ]
  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! POWER           [ shift and go to state 170 ]


state 224

    (74) arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    GTHAN           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    LTHANEQ         reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    GTHANEQ         reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    ISEQUAL         reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    NOTEQUAL        reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    EQUALS          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    NOT             reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    PLUS            reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    MINUS           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    MODULUS         reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    DIVIDE          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    MULTIPLY        reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    POWER           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    COLON           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    OR              reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    AND             reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    RPAREN          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    EXIT            reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    PRINT           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    ADD             reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    REMOVE          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    SET             reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    MOVE            reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    INCREASE        reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    DECREASE        reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    INITIATE        reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    IF              reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    EXECUTE         reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    GOTO            reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    USING           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    END_BLOCK       reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    COMMA           reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    RBRACE          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)
    RBRACK          reduce using rule 74 (arithmetic_expression -> arithmetic_or_object MULTIPLY arithmetic_or_object .)

  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! DIVIDE          [ shift and go to state 169 ]
  ! MULTIPLY        [ shift and go to state 172 ]
  ! POWER           [ shift and go to state 170 ]


state 225

    (72) arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    GTHAN           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    LTHANEQ         reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    GTHANEQ         reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    ISEQUAL         reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    NOTEQUAL        reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    EQUALS          reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    NOT             reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    PLUS            reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    MINUS           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    MODULUS         reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    POWER           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    COLON           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    OR              reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    AND             reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    RPAREN          reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    EXIT            reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    PRINT           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    ADD             reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    REMOVE          reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    SET             reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    MOVE            reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    INCREASE        reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    DECREASE        reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    INITIATE        reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    IF              reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    EXECUTE         reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    GOTO            reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    USING           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    END_BLOCK       reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    COMMA           reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    RBRACE          reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    RBRACK          reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .)
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172

  ! DIVIDE          [ reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .) ]
  ! MULTIPLY        [ reduce using rule 72 (arithmetic_expression -> arithmetic_or_object MODULUS arithmetic_or_object .) ]
  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! POWER           [ shift and go to state 170 ]


state 226

    (71) arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    LTHAN           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    GTHAN           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    LTHANEQ         reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    GTHANEQ         reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    ISEQUAL         reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    NOTEQUAL        reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    EQUALS          reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    NOT             reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    PLUS            reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    MINUS           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    MODULUS         reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    POWER           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    COLON           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    OR              reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    AND             reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    RPAREN          reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    EXIT            reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    PRINT           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    ADD             reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    REMOVE          reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    SET             reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    MOVE            reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    INCREASE        reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    DECREASE        reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    INITIATE        reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    IF              reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    EXECUTE         reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    GOTO            reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    USING           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    END_BLOCK       reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    COMMA           reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    RBRACE          reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    RBRACK          reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .)
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172

  ! DIVIDE          [ reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .) ]
  ! MULTIPLY        [ reduce using rule 71 (arithmetic_expression -> arithmetic_or_object MINUS arithmetic_or_object .) ]
  ! PLUS            [ shift and go to state 171 ]
  ! MINUS           [ shift and go to state 174 ]
  ! MODULUS         [ shift and go to state 173 ]
  ! POWER           [ shift and go to state 170 ]


state 227

    (102) tf_expression -> LPAREN tf_expression RPAREN .

    OR              reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    AND             reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    COLON           reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    RPAREN          reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    EXIT            reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    PRINT           reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    ADD             reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    REMOVE          reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    SET             reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    MOVE            reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    INCREASE        reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    DECREASE        reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    INITIATE        reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    IF              reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    EXECUTE         reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    GOTO            reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    USING           reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    END_BLOCK       reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    COMMA           reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)
    RBRACE          reduce using rule 102 (tf_expression -> LPAREN tf_expression RPAREN .)


state 228

    (77) arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .

    LTHAN           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    GTHAN           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    LTHANEQ         reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    GTHANEQ         reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    ISEQUAL         reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    NOTEQUAL        reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    EQUALS          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    NOT             reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    PLUS            reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    MINUS           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    MODULUS         reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    DIVIDE          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    MULTIPLY        reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    POWER           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    COLON           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    OR              reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    AND             reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    RPAREN          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    EXIT            reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    PRINT           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    ADD             reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    REMOVE          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    SET             reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    MOVE            reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    INCREASE        reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    DECREASE        reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    INITIATE        reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    IF              reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    EXECUTE         reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    GOTO            reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    USING           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    END_BLOCK       reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    COMMA           reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    RBRACE          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)
    RBRACK          reduce using rule 77 (arithmetic_expression -> LPAREN arithmetic_or_object RPAREN .)


state 229

    (112) has_expression -> object_chain HAS ID .

    COLON           reduce using rule 112 (has_expression -> object_chain HAS ID .)
    OR              reduce using rule 112 (has_expression -> object_chain HAS ID .)
    AND             reduce using rule 112 (has_expression -> object_chain HAS ID .)
    LTHAN           reduce using rule 112 (has_expression -> object_chain HAS ID .)
    GTHAN           reduce using rule 112 (has_expression -> object_chain HAS ID .)
    LTHANEQ         reduce using rule 112 (has_expression -> object_chain HAS ID .)
    GTHANEQ         reduce using rule 112 (has_expression -> object_chain HAS ID .)
    ISEQUAL         reduce using rule 112 (has_expression -> object_chain HAS ID .)
    NOTEQUAL        reduce using rule 112 (has_expression -> object_chain HAS ID .)
    EQUALS          reduce using rule 112 (has_expression -> object_chain HAS ID .)
    NOT             reduce using rule 112 (has_expression -> object_chain HAS ID .)
    RBRACE          reduce using rule 112 (has_expression -> object_chain HAS ID .)
    RPAREN          reduce using rule 112 (has_expression -> object_chain HAS ID .)
    EXIT            reduce using rule 112 (has_expression -> object_chain HAS ID .)
    PRINT           reduce using rule 112 (has_expression -> object_chain HAS ID .)
    ADD             reduce using rule 112 (has_expression -> object_chain HAS ID .)
    REMOVE          reduce using rule 112 (has_expression -> object_chain HAS ID .)
    SET             reduce using rule 112 (has_expression -> object_chain HAS ID .)
    MOVE            reduce using rule 112 (has_expression -> object_chain HAS ID .)
    INCREASE        reduce using rule 112 (has_expression -> object_chain HAS ID .)
    DECREASE        reduce using rule 112 (has_expression -> object_chain HAS ID .)
    INITIATE        reduce using rule 112 (has_expression -> object_chain HAS ID .)
    IF              reduce using rule 112 (has_expression -> object_chain HAS ID .)
    EXECUTE         reduce using rule 112 (has_expression -> object_chain HAS ID .)
    GOTO            reduce using rule 112 (has_expression -> object_chain HAS ID .)
    USING           reduce using rule 112 (has_expression -> object_chain HAS ID .)
    END_BLOCK       reduce using rule 112 (has_expression -> object_chain HAS ID .)
    COMMA           reduce using rule 112 (has_expression -> object_chain HAS ID .)


state 230

    (133) decrease -> DECREASE object_chain BY arithmetic_or_object .
    (70) arithmetic_expression -> arithmetic_or_object . PLUS arithmetic_or_object
    (71) arithmetic_expression -> arithmetic_or_object . MINUS arithmetic_or_object
    (72) arithmetic_expression -> arithmetic_or_object . MODULUS arithmetic_or_object
    (73) arithmetic_expression -> arithmetic_or_object . DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> arithmetic_or_object . MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> arithmetic_or_object . POWER arithmetic_or_object

    END_BLOCK       reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    EXIT            reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    PRINT           reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    ADD             reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    REMOVE          reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    SET             reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    MOVE            reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    INCREASE        reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    DECREASE        reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    INITIATE        reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    IF              reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    EXECUTE         reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    GOTO            reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    USING           reduce using rule 133 (decrease -> DECREASE object_chain BY arithmetic_or_object .)
    PLUS            shift and go to state 171
    MINUS           shift and go to state 174
    MODULUS         shift and go to state 173
    DIVIDE          shift and go to state 169
    MULTIPLY        shift and go to state 172
    POWER           shift and go to state 170


state 231

    (30) function_list -> function_list ID args_or_nothing COLON . statement_list END_BLOCK
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 245
    empty                          shift and go to state 46

state 232

    (32) args_or_nothing -> WITH ID . optional_args
    (34) optional_args -> . optional_args COMMA ID
    (35) optional_args -> . empty
    (1) empty -> .

    COMMA           reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)

    optional_args                  shift and go to state 247
    empty                          shift and go to state 246

state 233

    (25) action_list -> string_value COLON statement_list END_BLOCK . action_list
    (25) action_list -> . string_value COLON statement_list END_BLOCK action_list
    (26) action_list -> . empty
    (94) string_value -> . STRING_VAL
    (1) empty -> .

    STRING_VAL      shift and go to state 22
    END_BLOCK       reduce using rule 1 (empty -> .)

    empty                          shift and go to state 83
    string_value                   shift and go to state 81
    action_list                    shift and go to state 248

state 234

    (19) d_directive -> DIALOGUE COLON dialogue_list END_BLOCK .

    END_BLOCK       reduce using rule 19 (d_directive -> DIALOGUE COLON dialogue_list END_BLOCK .)


state 235

    (20) dialogue_list -> LABEL COLON . statement_list END_BLOCK dialogue_list
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 249
    empty                          shift and go to state 46

state 236

    (124) from_or_nothing -> FROM object_chain .
    (82) object_chain -> object_chain . ON ID

    EXIT            reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    PRINT           reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    ADD             reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    REMOVE          reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    SET             reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    MOVE            reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    INCREASE        reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    DECREASE        reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    INITIATE        reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    IF              reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    EXECUTE         reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    GOTO            reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    USING           reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    END_BLOCK       reduce using rule 124 (from_or_nothing -> FROM object_chain .)
    ON              shift and go to state 138


state 237

    (58) passed_args -> WITH arg optional_passed_args .
    (60) optional_passed_args -> optional_passed_args . COMMA arg

    EXIT            reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    PRINT           reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    ADD             reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    REMOVE          reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    SET             reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    MOVE            reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    INCREASE        reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    DECREASE        reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    INITIATE        reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    IF              reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    EXECUTE         reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    GOTO            reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    USING           reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    END_BLOCK       reduce using rule 58 (passed_args -> WITH arg optional_passed_args .)
    COMMA           shift and go to state 250


state 238

    (61) optional_passed_args -> empty .

    COMMA           reduce using rule 61 (optional_passed_args -> empty .)
    EXIT            reduce using rule 61 (optional_passed_args -> empty .)
    PRINT           reduce using rule 61 (optional_passed_args -> empty .)
    ADD             reduce using rule 61 (optional_passed_args -> empty .)
    REMOVE          reduce using rule 61 (optional_passed_args -> empty .)
    SET             reduce using rule 61 (optional_passed_args -> empty .)
    MOVE            reduce using rule 61 (optional_passed_args -> empty .)
    INCREASE        reduce using rule 61 (optional_passed_args -> empty .)
    DECREASE        reduce using rule 61 (optional_passed_args -> empty .)
    INITIATE        reduce using rule 61 (optional_passed_args -> empty .)
    IF              reduce using rule 61 (optional_passed_args -> empty .)
    EXECUTE         reduce using rule 61 (optional_passed_args -> empty .)
    GOTO            reduce using rule 61 (optional_passed_args -> empty .)
    USING           reduce using rule 61 (optional_passed_args -> empty .)
    END_BLOCK       reduce using rule 61 (optional_passed_args -> empty .)


state 239

    (89) decimal_primitive -> LBRACE DECIMAL ID ASSIGN . numeric_literal RBRACE
    (92) numeric_literal -> . arithmetic_expression
    (93) numeric_literal -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 251
    arithmetic_or_object           shift and go to state 121
    numeric_literal                shift and go to state 253
    object_chain                   shift and go to state 252

state 240

    (91) tf_primitive -> LBRACE TF ID ASSIGN . tf_expression RBRACE
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    has_expression                 shift and go to state 119
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    object_chain                   shift and go to state 128
    tf_expression                  shift and go to state 254
    string_value                   shift and go to state 122

state 241

    (88) integer_primitive -> LBRACE INTEGER ID ASSIGN . numeric_literal RBRACE
    (92) numeric_literal -> . arithmetic_expression
    (93) numeric_literal -> . object_chain
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 140
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    ID              shift and go to state 91

    arithmetic_expression          shift and go to state 251
    arithmetic_or_object           shift and go to state 121
    numeric_literal                shift and go to state 255
    object_chain                   shift and go to state 252

state 242

    (90) string_primitive -> LBRACE STRING ID ASSIGN . string_expression RBRACE
    (95) string_expression -> . string_expression CONCAT string_literal
    (96) string_expression -> . string_literal
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (94) string_value -> . STRING_VAL
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID

    STRING_VAL      shift and go to state 22
    ID              shift and go to state 91

    string_expression              shift and go to state 256
    object_chain                   shift and go to state 99
    string_literal                 shift and go to state 98
    string_value                   shift and go to state 100

state 243

    (80) to_or_nothing -> TO object_chain .
    (82) object_chain -> object_chain . ON ID

    EXIT            reduce using rule 80 (to_or_nothing -> TO object_chain .)
    PRINT           reduce using rule 80 (to_or_nothing -> TO object_chain .)
    ADD             reduce using rule 80 (to_or_nothing -> TO object_chain .)
    REMOVE          reduce using rule 80 (to_or_nothing -> TO object_chain .)
    SET             reduce using rule 80 (to_or_nothing -> TO object_chain .)
    MOVE            reduce using rule 80 (to_or_nothing -> TO object_chain .)
    INCREASE        reduce using rule 80 (to_or_nothing -> TO object_chain .)
    DECREASE        reduce using rule 80 (to_or_nothing -> TO object_chain .)
    INITIATE        reduce using rule 80 (to_or_nothing -> TO object_chain .)
    IF              reduce using rule 80 (to_or_nothing -> TO object_chain .)
    EXECUTE         reduce using rule 80 (to_or_nothing -> TO object_chain .)
    GOTO            reduce using rule 80 (to_or_nothing -> TO object_chain .)
    USING           reduce using rule 80 (to_or_nothing -> TO object_chain .)
    END_BLOCK       reduce using rule 80 (to_or_nothing -> TO object_chain .)
    ON              shift and go to state 138


state 244

    (51) conditional -> IF tf_expression COLON statement_list END_BLOCK . else_if_conditional else_conditional
    (52) else_if_conditional -> . else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK
    (53) else_if_conditional -> . empty
    (1) empty -> .

    ELSE            reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    else_if_conditional            shift and go to state 257
    empty                          shift and go to state 258

state 245

    (30) function_list -> function_list ID args_or_nothing COLON statement_list . END_BLOCK
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 259
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 246

    (35) optional_args -> empty .

    COMMA           reduce using rule 35 (optional_args -> empty .)
    COLON           reduce using rule 35 (optional_args -> empty .)


state 247

    (32) args_or_nothing -> WITH ID optional_args .
    (34) optional_args -> optional_args . COMMA ID

    COLON           reduce using rule 32 (args_or_nothing -> WITH ID optional_args .)
    COMMA           shift and go to state 260


state 248

    (25) action_list -> string_value COLON statement_list END_BLOCK action_list .

    END_BLOCK       reduce using rule 25 (action_list -> string_value COLON statement_list END_BLOCK action_list .)


state 249

    (20) dialogue_list -> LABEL COLON statement_list . END_BLOCK dialogue_list
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 261
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    move                           shift and go to state 68
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    conditional                    shift and go to state 54
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 250

    (60) optional_passed_args -> optional_passed_args COMMA . arg
    (62) arg -> . arithmetic_expression
    (63) arg -> . string_expression
    (64) arg -> . tf_expression
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (95) string_expression -> . string_expression CONCAT string_literal
    (96) string_expression -> . string_literal
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain
    (97) string_literal -> . string_value
    (98) string_literal -> . object_chain
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (94) string_value -> . STRING_VAL
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value

    MINUS           shift and go to state 116
    LPAREN          shift and go to state 203
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    NOT             shift and go to state 129
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    ID              shift and go to state 91
    STRING_VAL      shift and go to state 22
    HAS             shift and go to state 125

    arithmetic_expression          shift and go to state 201
    arithmetic_or_object           shift and go to state 121
    string_literal                 shift and go to state 98
    string_expression              shift and go to state 202
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 204
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    arg                            shift and go to state 262
    tf_expression                  shift and go to state 199
    has_expression                 shift and go to state 119
    string_value                   shift and go to state 200

state 251

    (92) numeric_literal -> arithmetic_expression .
    (130) arithmetic_or_object -> arithmetic_expression .

    RBRACE          reduce using rule 92 (numeric_literal -> arithmetic_expression .)
    PLUS            reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MINUS           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MODULUS         reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    DIVIDE          reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    MULTIPLY        reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)
    POWER           reduce using rule 130 (arithmetic_or_object -> arithmetic_expression .)


state 252

    (93) numeric_literal -> object_chain .
    (82) object_chain -> object_chain . ON ID
    (131) arithmetic_or_object -> object_chain .

    RBRACE          reduce using rule 93 (numeric_literal -> object_chain .)
    ON              shift and go to state 138
    PLUS            reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MINUS           reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MODULUS         reduce using rule 131 (arithmetic_or_object -> object_chain .)
    DIVIDE          reduce using rule 131 (arithmetic_or_object -> object_chain .)
    MULTIPLY        reduce using rule 131 (arithmetic_or_object -> object_chain .)
    POWER           reduce using rule 131 (arithmetic_or_object -> object_chain .)


state 253

    (89) decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal . RBRACE

    RBRACE          shift and go to state 263


state 254

    (91) tf_primitive -> LBRACE TF ID ASSIGN tf_expression . RBRACE
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    RBRACE          shift and go to state 264
    OR              shift and go to state 166
    AND             shift and go to state 164


state 255

    (88) integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal . RBRACE

    RBRACE          shift and go to state 265


state 256

    (90) string_primitive -> LBRACE STRING ID ASSIGN string_expression . RBRACE
    (95) string_expression -> string_expression . CONCAT string_literal

    RBRACE          shift and go to state 266
    CONCAT          shift and go to state 143


state 257

    (51) conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional . else_conditional
    (52) else_if_conditional -> else_if_conditional . ELSE IF tf_expression COLON statement_list END_BLOCK
    (54) else_conditional -> . ELSE COLON statement_list END_BLOCK
    (55) else_conditional -> . empty
    (1) empty -> .

    ELSE            shift and go to state 268
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)
    END_BLOCK       reduce using rule 1 (empty -> .)

    empty                          shift and go to state 269
    else_conditional               shift and go to state 267

state 258

    (53) else_if_conditional -> empty .

    ELSE            reduce using rule 53 (else_if_conditional -> empty .)
    EXIT            reduce using rule 53 (else_if_conditional -> empty .)
    PRINT           reduce using rule 53 (else_if_conditional -> empty .)
    ADD             reduce using rule 53 (else_if_conditional -> empty .)
    REMOVE          reduce using rule 53 (else_if_conditional -> empty .)
    SET             reduce using rule 53 (else_if_conditional -> empty .)
    MOVE            reduce using rule 53 (else_if_conditional -> empty .)
    INCREASE        reduce using rule 53 (else_if_conditional -> empty .)
    DECREASE        reduce using rule 53 (else_if_conditional -> empty .)
    INITIATE        reduce using rule 53 (else_if_conditional -> empty .)
    IF              reduce using rule 53 (else_if_conditional -> empty .)
    EXECUTE         reduce using rule 53 (else_if_conditional -> empty .)
    GOTO            reduce using rule 53 (else_if_conditional -> empty .)
    USING           reduce using rule 53 (else_if_conditional -> empty .)
    END_BLOCK       reduce using rule 53 (else_if_conditional -> empty .)


state 259

    (30) function_list -> function_list ID args_or_nothing COLON statement_list END_BLOCK .

    END_BLOCK       reduce using rule 30 (function_list -> function_list ID args_or_nothing COLON statement_list END_BLOCK .)
    ID              reduce using rule 30 (function_list -> function_list ID args_or_nothing COLON statement_list END_BLOCK .)


state 260

    (34) optional_args -> optional_args COMMA . ID

    ID              shift and go to state 270


state 261

    (20) dialogue_list -> LABEL COLON statement_list END_BLOCK . dialogue_list
    (20) dialogue_list -> . LABEL COLON statement_list END_BLOCK dialogue_list
    (21) dialogue_list -> . empty
    (1) empty -> .

    LABEL           shift and go to state 188
    END_BLOCK       reduce using rule 1 (empty -> .)

    dialogue_list                  shift and go to state 271
    empty                          shift and go to state 189

state 262

    (60) optional_passed_args -> optional_passed_args COMMA arg .

    COMMA           reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    EXIT            reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    PRINT           reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    ADD             reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    REMOVE          reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    SET             reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    MOVE            reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    INCREASE        reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    DECREASE        reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    INITIATE        reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    IF              reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    EXECUTE         reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    GOTO            reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    USING           reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)
    END_BLOCK       reduce using rule 60 (optional_passed_args -> optional_passed_args COMMA arg .)


state 263

    (89) decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .

    EXIT            reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    PRINT           reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    ADD             reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    REMOVE          reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    SET             reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    MOVE            reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    INCREASE        reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    DECREASE        reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    INITIATE        reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    IF              reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    EXECUTE         reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    GOTO            reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    USING           reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)
    END_BLOCK       reduce using rule 89 (decimal_primitive -> LBRACE DECIMAL ID ASSIGN numeric_literal RBRACE .)


state 264

    (91) tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .

    EXIT            reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    PRINT           reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    ADD             reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    REMOVE          reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    SET             reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    MOVE            reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    INCREASE        reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    DECREASE        reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    INITIATE        reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    IF              reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    EXECUTE         reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    GOTO            reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    USING           reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)
    END_BLOCK       reduce using rule 91 (tf_primitive -> LBRACE TF ID ASSIGN tf_expression RBRACE .)


state 265

    (88) integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .

    EXIT            reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    PRINT           reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    ADD             reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    REMOVE          reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    SET             reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    MOVE            reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    INCREASE        reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    DECREASE        reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    INITIATE        reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    IF              reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    EXECUTE         reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    GOTO            reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    USING           reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)
    END_BLOCK       reduce using rule 88 (integer_primitive -> LBRACE INTEGER ID ASSIGN numeric_literal RBRACE .)


state 266

    (90) string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .

    EXIT            reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    PRINT           reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    ADD             reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    REMOVE          reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    SET             reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    MOVE            reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    INCREASE        reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    DECREASE        reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    INITIATE        reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    IF              reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    EXECUTE         reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    GOTO            reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    USING           reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)
    END_BLOCK       reduce using rule 90 (string_primitive -> LBRACE STRING ID ASSIGN string_expression RBRACE .)


state 267

    (51) conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .

    END_BLOCK       reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    EXIT            reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    PRINT           reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    ADD             reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    REMOVE          reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    SET             reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    MOVE            reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    INCREASE        reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    DECREASE        reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    INITIATE        reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    IF              reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    EXECUTE         reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    GOTO            reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)
    USING           reduce using rule 51 (conditional -> IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional .)


state 268

    (52) else_if_conditional -> else_if_conditional ELSE . IF tf_expression COLON statement_list END_BLOCK
    (54) else_conditional -> ELSE . COLON statement_list END_BLOCK

    IF              shift and go to state 273
    COLON           shift and go to state 272


state 269

    (55) else_conditional -> empty .

    EXIT            reduce using rule 55 (else_conditional -> empty .)
    PRINT           reduce using rule 55 (else_conditional -> empty .)
    ADD             reduce using rule 55 (else_conditional -> empty .)
    REMOVE          reduce using rule 55 (else_conditional -> empty .)
    SET             reduce using rule 55 (else_conditional -> empty .)
    MOVE            reduce using rule 55 (else_conditional -> empty .)
    INCREASE        reduce using rule 55 (else_conditional -> empty .)
    DECREASE        reduce using rule 55 (else_conditional -> empty .)
    INITIATE        reduce using rule 55 (else_conditional -> empty .)
    IF              reduce using rule 55 (else_conditional -> empty .)
    EXECUTE         reduce using rule 55 (else_conditional -> empty .)
    GOTO            reduce using rule 55 (else_conditional -> empty .)
    USING           reduce using rule 55 (else_conditional -> empty .)
    END_BLOCK       reduce using rule 55 (else_conditional -> empty .)


state 270

    (34) optional_args -> optional_args COMMA ID .

    COMMA           reduce using rule 34 (optional_args -> optional_args COMMA ID .)
    COLON           reduce using rule 34 (optional_args -> optional_args COMMA ID .)


state 271

    (20) dialogue_list -> LABEL COLON statement_list END_BLOCK dialogue_list .

    END_BLOCK       reduce using rule 20 (dialogue_list -> LABEL COLON statement_list END_BLOCK dialogue_list .)


state 272

    (54) else_conditional -> ELSE COLON . statement_list END_BLOCK
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 274
    empty                          shift and go to state 46

state 273

    (52) else_if_conditional -> else_if_conditional ELSE IF . tf_expression COLON statement_list END_BLOCK
    (99) tf_expression -> . tf_expression OR tf_expression
    (100) tf_expression -> . tf_expression AND tf_expression
    (101) tf_expression -> . NOT tf_expression
    (102) tf_expression -> . LPAREN tf_expression RPAREN
    (103) tf_expression -> . tf_literal
    (104) tf_literal -> . has_expression
    (105) tf_literal -> . relational_expression
    (106) tf_literal -> . TRUE
    (107) tf_literal -> . FALSE
    (112) has_expression -> . object_chain HAS ID
    (113) has_expression -> . HAS ID
    (114) relational_expression -> . relational_operand relational_operator relational_operand
    (82) object_chain -> . object_chain ON ID
    (83) object_chain -> . ID
    (108) relational_operand -> . tf_literal
    (109) relational_operand -> . object_chain
    (110) relational_operand -> . arithmetic_expression
    (111) relational_operand -> . string_value
    (70) arithmetic_expression -> . arithmetic_or_object PLUS arithmetic_or_object
    (71) arithmetic_expression -> . arithmetic_or_object MINUS arithmetic_or_object
    (72) arithmetic_expression -> . arithmetic_or_object MODULUS arithmetic_or_object
    (73) arithmetic_expression -> . arithmetic_or_object DIVIDE arithmetic_or_object
    (74) arithmetic_expression -> . arithmetic_or_object MULTIPLY arithmetic_or_object
    (75) arithmetic_expression -> . arithmetic_or_object POWER arithmetic_or_object
    (76) arithmetic_expression -> . MINUS arithmetic_or_object
    (77) arithmetic_expression -> . LPAREN arithmetic_or_object RPAREN
    (78) arithmetic_expression -> . INTEGER_VAL
    (79) arithmetic_expression -> . DECIMAL_VAL
    (94) string_value -> . STRING_VAL
    (130) arithmetic_or_object -> . arithmetic_expression
    (131) arithmetic_or_object -> . object_chain

    NOT             shift and go to state 129
    LPAREN          shift and go to state 123
    TRUE            shift and go to state 115
    FALSE           shift and go to state 126
    HAS             shift and go to state 125
    ID              shift and go to state 91
    MINUS           shift and go to state 116
    INTEGER_VAL     shift and go to state 124
    DECIMAL_VAL     shift and go to state 127
    STRING_VAL      shift and go to state 22

    arithmetic_expression          shift and go to state 120
    arithmetic_or_object           shift and go to state 121
    relational_operand             shift and go to state 113
    object_chain                   shift and go to state 128
    tf_literal                     shift and go to state 117
    relational_expression          shift and go to state 118
    has_expression                 shift and go to state 119
    tf_expression                  shift and go to state 275
    string_value                   shift and go to state 122

state 274

    (54) else_conditional -> ELSE COLON statement_list . END_BLOCK
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 276
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 275

    (52) else_if_conditional -> else_if_conditional ELSE IF tf_expression . COLON statement_list END_BLOCK
    (99) tf_expression -> tf_expression . OR tf_expression
    (100) tf_expression -> tf_expression . AND tf_expression

    COLON           shift and go to state 277
    OR              shift and go to state 166
    AND             shift and go to state 164


state 276

    (54) else_conditional -> ELSE COLON statement_list END_BLOCK .

    EXIT            reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    PRINT           reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    ADD             reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    REMOVE          reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    SET             reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    MOVE            reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    INCREASE        reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    DECREASE        reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    INITIATE        reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    IF              reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    EXECUTE         reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    GOTO            reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    USING           reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)
    END_BLOCK       reduce using rule 54 (else_conditional -> ELSE COLON statement_list END_BLOCK .)


state 277

    (52) else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON . statement_list END_BLOCK
    (36) statement_list -> . statement_list statement
    (37) statement_list -> . empty
    (1) empty -> .

    END_BLOCK       reduce using rule 1 (empty -> .)
    EXIT            reduce using rule 1 (empty -> .)
    PRINT           reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    REMOVE          reduce using rule 1 (empty -> .)
    SET             reduce using rule 1 (empty -> .)
    MOVE            reduce using rule 1 (empty -> .)
    INCREASE        reduce using rule 1 (empty -> .)
    DECREASE        reduce using rule 1 (empty -> .)
    INITIATE        reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    EXECUTE         reduce using rule 1 (empty -> .)
    GOTO            reduce using rule 1 (empty -> .)
    USING           reduce using rule 1 (empty -> .)

    statement_list                 shift and go to state 278
    empty                          shift and go to state 46

state 278

    (52) else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list . END_BLOCK
    (36) statement_list -> statement_list . statement
    (38) statement -> . print
    (39) statement -> . add
    (40) statement -> . remove
    (41) statement -> . set
    (42) statement -> . move
    (43) statement -> . increase
    (44) statement -> . decrease
    (45) statement -> . initiate
    (46) statement -> . conditional
    (47) statement -> . execute
    (48) statement -> . goto
    (49) statement -> . using
    (50) statement -> . EXIT
    (65) print -> . PRINT string_expression
    (66) add -> . ADD quantity ID to_or_nothing
    (67) add -> . ADD primitive
    (123) remove -> . REMOVE quantity ID from_or_nothing
    (126) set -> . SET object_chain TO arg
    (127) move -> . MOVE character_or_nothing TO object_chain
    (132) increase -> . INCREASE object_chain BY arithmetic_or_object
    (133) decrease -> . DECREASE object_chain BY arithmetic_or_object
    (134) initiate -> . INITIATE DIALOGUE AT LABEL
    (51) conditional -> . IF tf_expression COLON statement_list END_BLOCK else_if_conditional else_conditional
    (57) execute -> . EXECUTE object_chain passed_args
    (56) goto -> . GOTO LABEL
    (135) using -> . USING string_value

    END_BLOCK       shift and go to state 279
    EXIT            shift and go to state 76
    PRINT           shift and go to state 58
    ADD             shift and go to state 70
    REMOVE          shift and go to state 57
    SET             shift and go to state 60
    MOVE            shift and go to state 52
    INCREASE        shift and go to state 59
    DECREASE        shift and go to state 77
    INITIATE        shift and go to state 61
    IF              shift and go to state 72
    EXECUTE         shift and go to state 66
    GOTO            shift and go to state 55
    USING           shift and go to state 62

    set                            shift and go to state 53
    conditional                    shift and go to state 54
    decrease                       shift and go to state 56
    increase                       shift and go to state 63
    add                            shift and go to state 64
    statement                      shift and go to state 65
    print                          shift and go to state 67
    move                           shift and go to state 68
    goto                           shift and go to state 69
    using                          shift and go to state 71
    execute                        shift and go to state 73
    remove                         shift and go to state 74
    initiate                       shift and go to state 75

state 279

    (52) else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .

    ELSE            reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    EXIT            reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    PRINT           reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    ADD             reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    REMOVE          reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    SET             reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    MOVE            reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    INCREASE        reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    DECREASE        reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    INITIATE        reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    IF              reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    EXECUTE         reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    GOTO            reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    USING           reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)
    END_BLOCK       reduce using rule 52 (else_if_conditional -> else_if_conditional ELSE IF tf_expression COLON statement_list END_BLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LTHAN in state 214 resolved as shift
WARNING: shift/reduce conflict for GTHAN in state 214 resolved as shift
WARNING: shift/reduce conflict for LTHANEQ in state 214 resolved as shift
WARNING: shift/reduce conflict for GTHANEQ in state 214 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 214 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 214 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 214 resolved as shift
WARNING: shift/reduce conflict for NOT in state 214 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 222 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 222 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 222 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 222 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 222 resolved as shift
WARNING: shift/reduce conflict for POWER in state 222 resolved as shift
